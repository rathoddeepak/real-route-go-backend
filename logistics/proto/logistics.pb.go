//
//--------------------------------
//Author: Deepak Rathod
//--------------------------------
//Date - 18 August 2022
//Phone: +917020814070
//Email: rathoddeepak537@gmail.com
//--------------------------------
//--->   Logistics System   <---
//--------------------------------

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: logistics.proto

package justify

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type KeyValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *KeyValue) Reset() {
	*x = KeyValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValue) ProtoMessage() {}

func (x *KeyValue) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValue.ProtoReflect.Descriptor instead.
func (*KeyValue) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{0}
}

func (x *KeyValue) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KeyValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Subscription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId    int64   `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ProductId int64   `protobuf:"varint,3,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	StartFrom int64   `protobuf:"varint,4,opt,name=start_from,json=startFrom,proto3" json:"start_from,omitempty"`
	DlvIns    int32   `protobuf:"varint,5,opt,name=dlv_ins,json=dlvIns,proto3" json:"dlv_ins,omitempty"`
	DlvDays   int64   `protobuf:"varint,6,opt,name=dlv_days,json=dlvDays,proto3" json:"dlv_days,omitempty"`
	Sun       float64 `protobuf:"fixed64,7,opt,name=sun,proto3" json:"sun,omitempty"`
	Mon       float64 `protobuf:"fixed64,8,opt,name=mon,proto3" json:"mon,omitempty"`
	Tue       float64 `protobuf:"fixed64,9,opt,name=tue,proto3" json:"tue,omitempty"`
	Wed       float64 `protobuf:"fixed64,10,opt,name=wed,proto3" json:"wed,omitempty"`
	Thu       float64 `protobuf:"fixed64,11,opt,name=thu,proto3" json:"thu,omitempty"`
	Fri       float64 `protobuf:"fixed64,12,opt,name=fri,proto3" json:"fri,omitempty"`
	Sat       float64 `protobuf:"fixed64,13,opt,name=sat,proto3" json:"sat,omitempty"`
	Pattern   int64   `protobuf:"varint,14,opt,name=pattern,proto3" json:"pattern,omitempty"`
	Created   int64   `protobuf:"varint,15,opt,name=created,proto3" json:"created,omitempty"`
	Status    int32   `protobuf:"varint,16,opt,name=status,proto3" json:"status,omitempty"`
	AddressId int64   `protobuf:"varint,17,opt,name=address_id,json=addressId,proto3" json:"address_id,omitempty"`
	SlotId    int64   `protobuf:"varint,18,opt,name=slot_id,json=slotId,proto3" json:"slot_id,omitempty"`
	CityId    int64   `protobuf:"varint,19,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	HubId     int64   `protobuf:"varint,20,opt,name=hub_id,json=hubId,proto3" json:"hub_id,omitempty"`
	ExpEnd    int64   `protobuf:"varint,21,opt,name=exp_end,json=expEnd,proto3" json:"exp_end,omitempty"`
}

func (x *Subscription) Reset() {
	*x = Subscription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Subscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subscription) ProtoMessage() {}

func (x *Subscription) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subscription.ProtoReflect.Descriptor instead.
func (*Subscription) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{1}
}

func (x *Subscription) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Subscription) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Subscription) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *Subscription) GetStartFrom() int64 {
	if x != nil {
		return x.StartFrom
	}
	return 0
}

func (x *Subscription) GetDlvIns() int32 {
	if x != nil {
		return x.DlvIns
	}
	return 0
}

func (x *Subscription) GetDlvDays() int64 {
	if x != nil {
		return x.DlvDays
	}
	return 0
}

func (x *Subscription) GetSun() float64 {
	if x != nil {
		return x.Sun
	}
	return 0
}

func (x *Subscription) GetMon() float64 {
	if x != nil {
		return x.Mon
	}
	return 0
}

func (x *Subscription) GetTue() float64 {
	if x != nil {
		return x.Tue
	}
	return 0
}

func (x *Subscription) GetWed() float64 {
	if x != nil {
		return x.Wed
	}
	return 0
}

func (x *Subscription) GetThu() float64 {
	if x != nil {
		return x.Thu
	}
	return 0
}

func (x *Subscription) GetFri() float64 {
	if x != nil {
		return x.Fri
	}
	return 0
}

func (x *Subscription) GetSat() float64 {
	if x != nil {
		return x.Sat
	}
	return 0
}

func (x *Subscription) GetPattern() int64 {
	if x != nil {
		return x.Pattern
	}
	return 0
}

func (x *Subscription) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *Subscription) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Subscription) GetAddressId() int64 {
	if x != nil {
		return x.AddressId
	}
	return 0
}

func (x *Subscription) GetSlotId() int64 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

func (x *Subscription) GetCityId() int64 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *Subscription) GetHubId() int64 {
	if x != nil {
		return x.HubId
	}
	return 0
}

func (x *Subscription) GetExpEnd() int64 {
	if x != nil {
		return x.ExpEnd
	}
	return 0
}

type CreateSubscriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    int64   `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ProductId int64   `protobuf:"varint,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	StartFrom int64   `protobuf:"varint,3,opt,name=start_from,json=startFrom,proto3" json:"start_from,omitempty"`
	DlvIns    int32   `protobuf:"varint,4,opt,name=dlv_ins,json=dlvIns,proto3" json:"dlv_ins,omitempty"`
	DlvDays   int64   `protobuf:"varint,5,opt,name=dlv_days,json=dlvDays,proto3" json:"dlv_days,omitempty"`
	Sun       float64 `protobuf:"fixed64,6,opt,name=sun,proto3" json:"sun,omitempty"`
	Mon       float64 `protobuf:"fixed64,7,opt,name=mon,proto3" json:"mon,omitempty"`
	Tue       float64 `protobuf:"fixed64,8,opt,name=tue,proto3" json:"tue,omitempty"`
	Wed       float64 `protobuf:"fixed64,9,opt,name=wed,proto3" json:"wed,omitempty"`
	Thu       float64 `protobuf:"fixed64,10,opt,name=thu,proto3" json:"thu,omitempty"`
	Fri       float64 `protobuf:"fixed64,11,opt,name=fri,proto3" json:"fri,omitempty"`
	Sat       float64 `protobuf:"fixed64,12,opt,name=sat,proto3" json:"sat,omitempty"`
	Pattern   int64   `protobuf:"varint,13,opt,name=pattern,proto3" json:"pattern,omitempty"`
	AddressId int64   `protobuf:"varint,14,opt,name=address_id,json=addressId,proto3" json:"address_id,omitempty"`
	SlotId    int64   `protobuf:"varint,15,opt,name=slot_id,json=slotId,proto3" json:"slot_id,omitempty"`
}

func (x *CreateSubscriptionRequest) Reset() {
	*x = CreateSubscriptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubscriptionRequest) ProtoMessage() {}

func (x *CreateSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*CreateSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{2}
}

func (x *CreateSubscriptionRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateSubscriptionRequest) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *CreateSubscriptionRequest) GetStartFrom() int64 {
	if x != nil {
		return x.StartFrom
	}
	return 0
}

func (x *CreateSubscriptionRequest) GetDlvIns() int32 {
	if x != nil {
		return x.DlvIns
	}
	return 0
}

func (x *CreateSubscriptionRequest) GetDlvDays() int64 {
	if x != nil {
		return x.DlvDays
	}
	return 0
}

func (x *CreateSubscriptionRequest) GetSun() float64 {
	if x != nil {
		return x.Sun
	}
	return 0
}

func (x *CreateSubscriptionRequest) GetMon() float64 {
	if x != nil {
		return x.Mon
	}
	return 0
}

func (x *CreateSubscriptionRequest) GetTue() float64 {
	if x != nil {
		return x.Tue
	}
	return 0
}

func (x *CreateSubscriptionRequest) GetWed() float64 {
	if x != nil {
		return x.Wed
	}
	return 0
}

func (x *CreateSubscriptionRequest) GetThu() float64 {
	if x != nil {
		return x.Thu
	}
	return 0
}

func (x *CreateSubscriptionRequest) GetFri() float64 {
	if x != nil {
		return x.Fri
	}
	return 0
}

func (x *CreateSubscriptionRequest) GetSat() float64 {
	if x != nil {
		return x.Sat
	}
	return 0
}

func (x *CreateSubscriptionRequest) GetPattern() int64 {
	if x != nil {
		return x.Pattern
	}
	return 0
}

func (x *CreateSubscriptionRequest) GetAddressId() int64 {
	if x != nil {
		return x.AddressId
	}
	return 0
}

func (x *CreateSubscriptionRequest) GetSlotId() int64 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

type CreateSubscriptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionId int64 `protobuf:"varint,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
}

func (x *CreateSubscriptionResponse) Reset() {
	*x = CreateSubscriptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSubscriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubscriptionResponse) ProtoMessage() {}

func (x *CreateSubscriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubscriptionResponse.ProtoReflect.Descriptor instead.
func (*CreateSubscriptionResponse) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{3}
}

func (x *CreateSubscriptionResponse) GetSubscriptionId() int64 {
	if x != nil {
		return x.SubscriptionId
	}
	return 0
}

type UpdateSubscriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionId int64   `protobuf:"varint,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	ProductId      int64   `protobuf:"varint,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	StartFrom      int64   `protobuf:"varint,3,opt,name=start_from,json=startFrom,proto3" json:"start_from,omitempty"`
	DlvIns         int32   `protobuf:"varint,4,opt,name=dlv_ins,json=dlvIns,proto3" json:"dlv_ins,omitempty"`
	DlvDays        int64   `protobuf:"varint,5,opt,name=dlv_days,json=dlvDays,proto3" json:"dlv_days,omitempty"`
	Sun            float64 `protobuf:"fixed64,6,opt,name=sun,proto3" json:"sun,omitempty"`
	Mon            float64 `protobuf:"fixed64,7,opt,name=mon,proto3" json:"mon,omitempty"`
	Tue            float64 `protobuf:"fixed64,8,opt,name=tue,proto3" json:"tue,omitempty"`
	Wed            float64 `protobuf:"fixed64,9,opt,name=wed,proto3" json:"wed,omitempty"`
	Thu            float64 `protobuf:"fixed64,10,opt,name=thu,proto3" json:"thu,omitempty"`
	Fri            float64 `protobuf:"fixed64,11,opt,name=fri,proto3" json:"fri,omitempty"`
	Sat            float64 `protobuf:"fixed64,12,opt,name=sat,proto3" json:"sat,omitempty"`
	Pattern        int64   `protobuf:"varint,13,opt,name=pattern,proto3" json:"pattern,omitempty"`
	Status         int32   `protobuf:"varint,14,opt,name=status,proto3" json:"status,omitempty"`
	AddressId      int64   `protobuf:"varint,15,opt,name=address_id,json=addressId,proto3" json:"address_id,omitempty"`
	SlotId         int64   `protobuf:"varint,16,opt,name=slot_id,json=slotId,proto3" json:"slot_id,omitempty"`
}

func (x *UpdateSubscriptionRequest) Reset() {
	*x = UpdateSubscriptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubscriptionRequest) ProtoMessage() {}

func (x *UpdateSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*UpdateSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateSubscriptionRequest) GetSubscriptionId() int64 {
	if x != nil {
		return x.SubscriptionId
	}
	return 0
}

func (x *UpdateSubscriptionRequest) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *UpdateSubscriptionRequest) GetStartFrom() int64 {
	if x != nil {
		return x.StartFrom
	}
	return 0
}

func (x *UpdateSubscriptionRequest) GetDlvIns() int32 {
	if x != nil {
		return x.DlvIns
	}
	return 0
}

func (x *UpdateSubscriptionRequest) GetDlvDays() int64 {
	if x != nil {
		return x.DlvDays
	}
	return 0
}

func (x *UpdateSubscriptionRequest) GetSun() float64 {
	if x != nil {
		return x.Sun
	}
	return 0
}

func (x *UpdateSubscriptionRequest) GetMon() float64 {
	if x != nil {
		return x.Mon
	}
	return 0
}

func (x *UpdateSubscriptionRequest) GetTue() float64 {
	if x != nil {
		return x.Tue
	}
	return 0
}

func (x *UpdateSubscriptionRequest) GetWed() float64 {
	if x != nil {
		return x.Wed
	}
	return 0
}

func (x *UpdateSubscriptionRequest) GetThu() float64 {
	if x != nil {
		return x.Thu
	}
	return 0
}

func (x *UpdateSubscriptionRequest) GetFri() float64 {
	if x != nil {
		return x.Fri
	}
	return 0
}

func (x *UpdateSubscriptionRequest) GetSat() float64 {
	if x != nil {
		return x.Sat
	}
	return 0
}

func (x *UpdateSubscriptionRequest) GetPattern() int64 {
	if x != nil {
		return x.Pattern
	}
	return 0
}

func (x *UpdateSubscriptionRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateSubscriptionRequest) GetAddressId() int64 {
	if x != nil {
		return x.AddressId
	}
	return 0
}

func (x *UpdateSubscriptionRequest) GetSlotId() int64 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

type UpdateSubscriptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateSubscriptionResponse) Reset() {
	*x = UpdateSubscriptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSubscriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubscriptionResponse) ProtoMessage() {}

func (x *UpdateSubscriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSubscriptionResponse.ProtoReflect.Descriptor instead.
func (*UpdateSubscriptionResponse) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateSubscriptionResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateSubscriptionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DetermineWalletBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        int64   `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CurrentAmount float64 `protobuf:"fixed64,2,opt,name=current_amount,json=currentAmount,proto3" json:"current_amount,omitempty"`
}

func (x *DetermineWalletBalanceRequest) Reset() {
	*x = DetermineWalletBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetermineWalletBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetermineWalletBalanceRequest) ProtoMessage() {}

func (x *DetermineWalletBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetermineWalletBalanceRequest.ProtoReflect.Descriptor instead.
func (*DetermineWalletBalanceRequest) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{6}
}

func (x *DetermineWalletBalanceRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DetermineWalletBalanceRequest) GetCurrentAmount() float64 {
	if x != nil {
		return x.CurrentAmount
	}
	return 0
}

type DetermineWalletBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance float64 `protobuf:"fixed64,1,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *DetermineWalletBalanceResponse) Reset() {
	*x = DetermineWalletBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetermineWalletBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetermineWalletBalanceResponse) ProtoMessage() {}

func (x *DetermineWalletBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetermineWalletBalanceResponse.ProtoReflect.Descriptor instead.
func (*DetermineWalletBalanceResponse) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{7}
}

func (x *DetermineWalletBalanceResponse) GetBalance() float64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

type FilterSubscriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionId int64 `protobuf:"varint,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	CityId         int64 `protobuf:"varint,2,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	HubId          int64 `protobuf:"varint,3,opt,name=hub_id,json=hubId,proto3" json:"hub_id,omitempty"`
	ProductId      int64 `protobuf:"varint,4,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	FromDate       int64 `protobuf:"varint,5,opt,name=from_date,json=fromDate,proto3" json:"from_date,omitempty"`
	ToDate         int64 `protobuf:"varint,6,opt,name=to_date,json=toDate,proto3" json:"to_date,omitempty"`
	Offset         int64 `protobuf:"varint,7,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit          int64 `protobuf:"varint,8,opt,name=limit,proto3" json:"limit,omitempty"`
	Status         int32 `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
	SlotId         int64 `protobuf:"varint,10,opt,name=slot_id,json=slotId,proto3" json:"slot_id,omitempty"`
}

func (x *FilterSubscriptionRequest) Reset() {
	*x = FilterSubscriptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterSubscriptionRequest) ProtoMessage() {}

func (x *FilterSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*FilterSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{8}
}

func (x *FilterSubscriptionRequest) GetSubscriptionId() int64 {
	if x != nil {
		return x.SubscriptionId
	}
	return 0
}

func (x *FilterSubscriptionRequest) GetCityId() int64 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *FilterSubscriptionRequest) GetHubId() int64 {
	if x != nil {
		return x.HubId
	}
	return 0
}

func (x *FilterSubscriptionRequest) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *FilterSubscriptionRequest) GetFromDate() int64 {
	if x != nil {
		return x.FromDate
	}
	return 0
}

func (x *FilterSubscriptionRequest) GetToDate() int64 {
	if x != nil {
		return x.ToDate
	}
	return 0
}

func (x *FilterSubscriptionRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *FilterSubscriptionRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *FilterSubscriptionRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *FilterSubscriptionRequest) GetSlotId() int64 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

type GetSubscriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionId int64 `protobuf:"varint,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
}

func (x *GetSubscriptionRequest) Reset() {
	*x = GetSubscriptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscriptionRequest) ProtoMessage() {}

func (x *GetSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*GetSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{9}
}

func (x *GetSubscriptionRequest) GetSubscriptionId() int64 {
	if x != nil {
		return x.SubscriptionId
	}
	return 0
}

type GetSubscriptionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subscriptions []*Subscription `protobuf:"bytes,1,rep,name=subscriptions,proto3" json:"subscriptions,omitempty"`
}

func (x *GetSubscriptionsResponse) Reset() {
	*x = GetSubscriptionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubscriptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscriptionsResponse) ProtoMessage() {}

func (x *GetSubscriptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscriptionsResponse.ProtoReflect.Descriptor instead.
func (*GetSubscriptionsResponse) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{10}
}

func (x *GetSubscriptionsResponse) GetSubscriptions() []*Subscription {
	if x != nil {
		return x.Subscriptions
	}
	return nil
}

type GetSubscriptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subscription *Subscription `protobuf:"bytes,1,opt,name=subscription,proto3" json:"subscription,omitempty"`
}

func (x *GetSubscriptionResponse) Reset() {
	*x = GetSubscriptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubscriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscriptionResponse) ProtoMessage() {}

func (x *GetSubscriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscriptionResponse.ProtoReflect.Descriptor instead.
func (*GetSubscriptionResponse) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{11}
}

func (x *GetSubscriptionResponse) GetSubscription() *Subscription {
	if x != nil {
		return x.Subscription
	}
	return nil
}

//Custom Subscriptions Messages
type SubsStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SubsStatus) Reset() {
	*x = SubsStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubsStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubsStatus) ProtoMessage() {}

func (x *SubsStatus) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubsStatus.ProtoReflect.Descriptor instead.
func (*SubsStatus) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{12}
}

func (x *SubsStatus) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SubsStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Customer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Wallet  float64 `protobuf:"fixed64,3,opt,name=wallet,proto3" json:"wallet,omitempty"`
	Balance float64 `protobuf:"fixed64,4,opt,name=balance,proto3" json:"balance,omitempty"`
	Phone   string  `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *Customer) Reset() {
	*x = Customer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Customer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Customer) ProtoMessage() {}

func (x *Customer) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Customer.ProtoReflect.Descriptor instead.
func (*Customer) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{13}
}

func (x *Customer) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Customer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Customer) GetWallet() float64 {
	if x != nil {
		return x.Wallet
	}
	return 0
}

func (x *Customer) GetBalance() float64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *Customer) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type ProductItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Qty  float64 `protobuf:"fixed64,3,opt,name=qty,proto3" json:"qty,omitempty"`
}

func (x *ProductItem) Reset() {
	*x = ProductItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductItem) ProtoMessage() {}

func (x *ProductItem) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductItem.ProtoReflect.Descriptor instead.
func (*ProductItem) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{14}
}

func (x *ProductItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProductItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProductItem) GetQty() float64 {
	if x != nil {
		return x.Qty
	}
	return 0
}

type SubscriptionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status    *SubsStatus  `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Customer  *Customer    `protobuf:"bytes,3,opt,name=customer,proto3" json:"customer,omitempty"`
	Product   *ProductItem `protobuf:"bytes,4,opt,name=product,proto3" json:"product,omitempty"`
	RenewDate int64        `protobuf:"varint,5,opt,name=renew_date,json=renewDate,proto3" json:"renew_date,omitempty"`
	Created   int64        `protobuf:"varint,6,opt,name=created,proto3" json:"created,omitempty"`
}

func (x *SubscriptionInfo) Reset() {
	*x = SubscriptionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscriptionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionInfo) ProtoMessage() {}

func (x *SubscriptionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionInfo.ProtoReflect.Descriptor instead.
func (*SubscriptionInfo) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{15}
}

func (x *SubscriptionInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SubscriptionInfo) GetStatus() *SubsStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *SubscriptionInfo) GetCustomer() *Customer {
	if x != nil {
		return x.Customer
	}
	return nil
}

func (x *SubscriptionInfo) GetProduct() *ProductItem {
	if x != nil {
		return x.Product
	}
	return nil
}

func (x *SubscriptionInfo) GetRenewDate() int64 {
	if x != nil {
		return x.RenewDate
	}
	return 0
}

func (x *SubscriptionInfo) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

type GetInfoSubscriptionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subscriptions []*SubscriptionInfo `protobuf:"bytes,1,rep,name=subscriptions,proto3" json:"subscriptions,omitempty"`
}

func (x *GetInfoSubscriptionsResponse) Reset() {
	*x = GetInfoSubscriptionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInfoSubscriptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfoSubscriptionsResponse) ProtoMessage() {}

func (x *GetInfoSubscriptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfoSubscriptionsResponse.ProtoReflect.Descriptor instead.
func (*GetInfoSubscriptionsResponse) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{16}
}

func (x *GetInfoSubscriptionsResponse) GetSubscriptions() []*SubscriptionInfo {
	if x != nil {
		return x.Subscriptions
	}
	return nil
}

type GetSubscriptionSummaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Summary []*KeyValue `protobuf:"bytes,1,rep,name=summary,proto3" json:"summary,omitempty"`
}

func (x *GetSubscriptionSummaryResponse) Reset() {
	*x = GetSubscriptionSummaryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubscriptionSummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscriptionSummaryResponse) ProtoMessage() {}

func (x *GetSubscriptionSummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscriptionSummaryResponse.ProtoReflect.Descriptor instead.
func (*GetSubscriptionSummaryResponse) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{17}
}

func (x *GetSubscriptionSummaryResponse) GetSummary() []*KeyValue {
	if x != nil {
		return x.Summary
	}
	return nil
}

type GetInfoSubscriptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subscriptions *SubscriptionInfo `protobuf:"bytes,1,opt,name=subscriptions,proto3" json:"subscriptions,omitempty"`
}

func (x *GetInfoSubscriptionResponse) Reset() {
	*x = GetInfoSubscriptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInfoSubscriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfoSubscriptionResponse) ProtoMessage() {}

func (x *GetInfoSubscriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfoSubscriptionResponse.ProtoReflect.Descriptor instead.
func (*GetInfoSubscriptionResponse) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{18}
}

func (x *GetInfoSubscriptionResponse) GetSubscriptions() *SubscriptionInfo {
	if x != nil {
		return x.Subscriptions
	}
	return nil
}

type InventoryProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	HubId   int64   `protobuf:"varint,3,opt,name=hub_id,json=hubId,proto3" json:"hub_id,omitempty"`
	HubName string  `protobuf:"bytes,4,opt,name=hub_name,json=hubName,proto3" json:"hub_name,omitempty"`
	Qty     float64 `protobuf:"fixed64,5,opt,name=qty,proto3" json:"qty,omitempty"`
}

func (x *InventoryProduct) Reset() {
	*x = InventoryProduct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InventoryProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InventoryProduct) ProtoMessage() {}

func (x *InventoryProduct) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InventoryProduct.ProtoReflect.Descriptor instead.
func (*InventoryProduct) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{19}
}

func (x *InventoryProduct) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *InventoryProduct) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InventoryProduct) GetHubId() int64 {
	if x != nil {
		return x.HubId
	}
	return 0
}

func (x *InventoryProduct) GetHubName() string {
	if x != nil {
		return x.HubName
	}
	return ""
}

func (x *InventoryProduct) GetQty() float64 {
	if x != nil {
		return x.Qty
	}
	return 0
}

type InventoryCustomer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Qty  float64 `protobuf:"fixed64,3,opt,name=qty,proto3" json:"qty,omitempty"`
}

func (x *InventoryCustomer) Reset() {
	*x = InventoryCustomer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InventoryCustomer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InventoryCustomer) ProtoMessage() {}

func (x *InventoryCustomer) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InventoryCustomer.ProtoReflect.Descriptor instead.
func (*InventoryCustomer) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{20}
}

func (x *InventoryCustomer) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *InventoryCustomer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InventoryCustomer) GetQty() float64 {
	if x != nil {
		return x.Qty
	}
	return 0
}

type GetInvetoryDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Products []*InventoryProduct `protobuf:"bytes,1,rep,name=products,proto3" json:"products,omitempty"`
}

func (x *GetInvetoryDataResponse) Reset() {
	*x = GetInvetoryDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInvetoryDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInvetoryDataResponse) ProtoMessage() {}

func (x *GetInvetoryDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInvetoryDataResponse.ProtoReflect.Descriptor instead.
func (*GetInvetoryDataResponse) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{21}
}

func (x *GetInvetoryDataResponse) GetProducts() []*InventoryProduct {
	if x != nil {
		return x.Products
	}
	return nil
}

type GetInvetoryCustomersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Customers []*InventoryCustomer `protobuf:"bytes,1,rep,name=customers,proto3" json:"customers,omitempty"`
}

func (x *GetInvetoryCustomersResponse) Reset() {
	*x = GetInvetoryCustomersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInvetoryCustomersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInvetoryCustomersResponse) ProtoMessage() {}

func (x *GetInvetoryCustomersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInvetoryCustomersResponse.ProtoReflect.Descriptor instead.
func (*GetInvetoryCustomersResponse) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{22}
}

func (x *GetInvetoryCustomersResponse) GetCustomers() []*InventoryCustomer {
	if x != nil {
		return x.Customers
	}
	return nil
}

//Slots Definations
type Slot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CityId   int64  `protobuf:"varint,2,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	StartHr  int32  `protobuf:"varint,3,opt,name=start_hr,json=startHr,proto3" json:"start_hr,omitempty"`
	StartMin int32  `protobuf:"varint,4,opt,name=start_min,json=startMin,proto3" json:"start_min,omitempty"`
	EndHr    int32  `protobuf:"varint,5,opt,name=end_hr,json=endHr,proto3" json:"end_hr,omitempty"`
	EndMin   int32  `protobuf:"varint,6,opt,name=end_min,json=endMin,proto3" json:"end_min,omitempty"`
	Status   int32  `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`
	Title    string `protobuf:"bytes,8,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *Slot) Reset() {
	*x = Slot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Slot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Slot) ProtoMessage() {}

func (x *Slot) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Slot.ProtoReflect.Descriptor instead.
func (*Slot) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{23}
}

func (x *Slot) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Slot) GetCityId() int64 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *Slot) GetStartHr() int32 {
	if x != nil {
		return x.StartHr
	}
	return 0
}

func (x *Slot) GetStartMin() int32 {
	if x != nil {
		return x.StartMin
	}
	return 0
}

func (x *Slot) GetEndHr() int32 {
	if x != nil {
		return x.EndHr
	}
	return 0
}

func (x *Slot) GetEndMin() int32 {
	if x != nil {
		return x.EndMin
	}
	return 0
}

func (x *Slot) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Slot) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type CreateSlotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CityId   int64  `protobuf:"varint,1,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	Title    string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	StartHr  int32  `protobuf:"varint,3,opt,name=start_hr,json=startHr,proto3" json:"start_hr,omitempty"`
	StartMin int32  `protobuf:"varint,4,opt,name=start_min,json=startMin,proto3" json:"start_min,omitempty"`
	EndHr    int32  `protobuf:"varint,5,opt,name=end_hr,json=endHr,proto3" json:"end_hr,omitempty"`
	EndMin   int32  `protobuf:"varint,6,opt,name=end_min,json=endMin,proto3" json:"end_min,omitempty"`
}

func (x *CreateSlotRequest) Reset() {
	*x = CreateSlotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSlotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSlotRequest) ProtoMessage() {}

func (x *CreateSlotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSlotRequest.ProtoReflect.Descriptor instead.
func (*CreateSlotRequest) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{24}
}

func (x *CreateSlotRequest) GetCityId() int64 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *CreateSlotRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateSlotRequest) GetStartHr() int32 {
	if x != nil {
		return x.StartHr
	}
	return 0
}

func (x *CreateSlotRequest) GetStartMin() int32 {
	if x != nil {
		return x.StartMin
	}
	return 0
}

func (x *CreateSlotRequest) GetEndHr() int32 {
	if x != nil {
		return x.EndHr
	}
	return 0
}

func (x *CreateSlotRequest) GetEndMin() int32 {
	if x != nil {
		return x.EndMin
	}
	return 0
}

type CreateSlotResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlotId int64 `protobuf:"varint,1,opt,name=slot_id,json=slotId,proto3" json:"slot_id,omitempty"`
}

func (x *CreateSlotResponse) Reset() {
	*x = CreateSlotResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSlotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSlotResponse) ProtoMessage() {}

func (x *CreateSlotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSlotResponse.ProtoReflect.Descriptor instead.
func (*CreateSlotResponse) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{25}
}

func (x *CreateSlotResponse) GetSlotId() int64 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

type UpdateSlotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlotId   int64  `protobuf:"varint,1,opt,name=slot_id,json=slotId,proto3" json:"slot_id,omitempty"`
	StartHr  int32  `protobuf:"varint,2,opt,name=start_hr,json=startHr,proto3" json:"start_hr,omitempty"`
	StartMin int32  `protobuf:"varint,3,opt,name=start_min,json=startMin,proto3" json:"start_min,omitempty"`
	EndHr    int32  `protobuf:"varint,4,opt,name=end_hr,json=endHr,proto3" json:"end_hr,omitempty"`
	EndMin   int32  `protobuf:"varint,5,opt,name=end_min,json=endMin,proto3" json:"end_min,omitempty"`
	Status   int32  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	Title    string `protobuf:"bytes,7,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *UpdateSlotRequest) Reset() {
	*x = UpdateSlotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSlotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSlotRequest) ProtoMessage() {}

func (x *UpdateSlotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSlotRequest.ProtoReflect.Descriptor instead.
func (*UpdateSlotRequest) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{26}
}

func (x *UpdateSlotRequest) GetSlotId() int64 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

func (x *UpdateSlotRequest) GetStartHr() int32 {
	if x != nil {
		return x.StartHr
	}
	return 0
}

func (x *UpdateSlotRequest) GetStartMin() int32 {
	if x != nil {
		return x.StartMin
	}
	return 0
}

func (x *UpdateSlotRequest) GetEndHr() int32 {
	if x != nil {
		return x.EndHr
	}
	return 0
}

func (x *UpdateSlotRequest) GetEndMin() int32 {
	if x != nil {
		return x.EndMin
	}
	return 0
}

func (x *UpdateSlotRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateSlotRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type UpdateSlotResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateSlotResponse) Reset() {
	*x = UpdateSlotResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSlotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSlotResponse) ProtoMessage() {}

func (x *UpdateSlotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSlotResponse.ProtoReflect.Descriptor instead.
func (*UpdateSlotResponse) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{27}
}

func (x *UpdateSlotResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateSlotResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetSlotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CityId int64 `protobuf:"varint,1,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	SlotId int64 `protobuf:"varint,2,opt,name=slot_id,json=slotId,proto3" json:"slot_id,omitempty"`
}

func (x *GetSlotRequest) Reset() {
	*x = GetSlotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSlotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSlotRequest) ProtoMessage() {}

func (x *GetSlotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSlotRequest.ProtoReflect.Descriptor instead.
func (*GetSlotRequest) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{28}
}

func (x *GetSlotRequest) GetCityId() int64 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *GetSlotRequest) GetSlotId() int64 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

type GetSlotsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slots []*Slot `protobuf:"bytes,1,rep,name=slots,proto3" json:"slots,omitempty"`
}

func (x *GetSlotsResponse) Reset() {
	*x = GetSlotsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSlotsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSlotsResponse) ProtoMessage() {}

func (x *GetSlotsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSlotsResponse.ProtoReflect.Descriptor instead.
func (*GetSlotsResponse) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{29}
}

func (x *GetSlotsResponse) GetSlots() []*Slot {
	if x != nil {
		return x.Slots
	}
	return nil
}

type GetSlotResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot *Slot `protobuf:"bytes,1,opt,name=slot,proto3" json:"slot,omitempty"`
}

func (x *GetSlotResponse) Reset() {
	*x = GetSlotResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSlotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSlotResponse) ProtoMessage() {}

func (x *GetSlotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSlotResponse.ProtoReflect.Descriptor instead.
func (*GetSlotResponse) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{30}
}

func (x *GetSlotResponse) GetSlot() *Slot {
	if x != nil {
		return x.Slot
	}
	return nil
}

//Agent messages
type Agent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CityId   int64   `protobuf:"varint,2,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	Name     string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Passcode string  `protobuf:"bytes,4,opt,name=passcode,proto3" json:"passcode,omitempty"`
	Avatar   string  `protobuf:"bytes,5,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Status   int32   `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	Lat      float64 `protobuf:"fixed64,7,opt,name=lat,proto3" json:"lat,omitempty"`
	Lng      float64 `protobuf:"fixed64,8,opt,name=lng,proto3" json:"lng,omitempty"`
	Phone    string  `protobuf:"bytes,9,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *Agent) Reset() {
	*x = Agent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Agent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Agent) ProtoMessage() {}

func (x *Agent) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Agent.ProtoReflect.Descriptor instead.
func (*Agent) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{31}
}

func (x *Agent) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Agent) GetCityId() int64 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *Agent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Agent) GetPasscode() string {
	if x != nil {
		return x.Passcode
	}
	return ""
}

func (x *Agent) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *Agent) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Agent) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *Agent) GetLng() float64 {
	if x != nil {
		return x.Lng
	}
	return 0
}

func (x *Agent) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type CreateAgentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CityId   int64  `protobuf:"varint,1,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Phone    string `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Passcode string `protobuf:"bytes,4,opt,name=passcode,proto3" json:"passcode,omitempty"`
}

func (x *CreateAgentRequest) Reset() {
	*x = CreateAgentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAgentRequest) ProtoMessage() {}

func (x *CreateAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAgentRequest.ProtoReflect.Descriptor instead.
func (*CreateAgentRequest) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{32}
}

func (x *CreateAgentRequest) GetCityId() int64 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *CreateAgentRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateAgentRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CreateAgentRequest) GetPasscode() string {
	if x != nil {
		return x.Passcode
	}
	return ""
}

type CreateAgentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId int64 `protobuf:"varint,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
}

func (x *CreateAgentResponse) Reset() {
	*x = CreateAgentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAgentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAgentResponse) ProtoMessage() {}

func (x *CreateAgentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAgentResponse.ProtoReflect.Descriptor instead.
func (*CreateAgentResponse) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{33}
}

func (x *CreateAgentResponse) GetAgentId() int64 {
	if x != nil {
		return x.AgentId
	}
	return 0
}

type UpdateAgentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId  int64   `protobuf:"varint,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	Name     string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Status   int32   `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Passcode string  `protobuf:"bytes,4,opt,name=passcode,proto3" json:"passcode,omitempty"`
	Lat      float64 `protobuf:"fixed64,5,opt,name=lat,proto3" json:"lat,omitempty"`
	Lng      float64 `protobuf:"fixed64,6,opt,name=lng,proto3" json:"lng,omitempty"`
	Avatar   string  `protobuf:"bytes,7,opt,name=avatar,proto3" json:"avatar,omitempty"`
}

func (x *UpdateAgentRequest) Reset() {
	*x = UpdateAgentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAgentRequest) ProtoMessage() {}

func (x *UpdateAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAgentRequest.ProtoReflect.Descriptor instead.
func (*UpdateAgentRequest) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{34}
}

func (x *UpdateAgentRequest) GetAgentId() int64 {
	if x != nil {
		return x.AgentId
	}
	return 0
}

func (x *UpdateAgentRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateAgentRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateAgentRequest) GetPasscode() string {
	if x != nil {
		return x.Passcode
	}
	return ""
}

func (x *UpdateAgentRequest) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *UpdateAgentRequest) GetLng() float64 {
	if x != nil {
		return x.Lng
	}
	return 0
}

func (x *UpdateAgentRequest) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

type UpdateAgentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateAgentResponse) Reset() {
	*x = UpdateAgentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAgentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAgentResponse) ProtoMessage() {}

func (x *UpdateAgentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAgentResponse.ProtoReflect.Descriptor instead.
func (*UpdateAgentResponse) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{35}
}

func (x *UpdateAgentResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateAgentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetAgentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId  int64  `protobuf:"varint,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	CityId   int64  `protobuf:"varint,2,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	Phone    string `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Passcode string `protobuf:"bytes,4,opt,name=passcode,proto3" json:"passcode,omitempty"`
}

func (x *GetAgentRequest) Reset() {
	*x = GetAgentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAgentRequest) ProtoMessage() {}

func (x *GetAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAgentRequest.ProtoReflect.Descriptor instead.
func (*GetAgentRequest) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{36}
}

func (x *GetAgentRequest) GetAgentId() int64 {
	if x != nil {
		return x.AgentId
	}
	return 0
}

func (x *GetAgentRequest) GetCityId() int64 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *GetAgentRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *GetAgentRequest) GetPasscode() string {
	if x != nil {
		return x.Passcode
	}
	return ""
}

type FilterAgentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId int64  `protobuf:"varint,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	CityId  int64  `protobuf:"varint,2,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	Name    string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Status  int32  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	Limit   int64  `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset  int64  `protobuf:"varint,6,opt,name=offset,proto3" json:"offset,omitempty"`
	Phone   string `protobuf:"bytes,7,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *FilterAgentRequest) Reset() {
	*x = FilterAgentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterAgentRequest) ProtoMessage() {}

func (x *FilterAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterAgentRequest.ProtoReflect.Descriptor instead.
func (*FilterAgentRequest) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{37}
}

func (x *FilterAgentRequest) GetAgentId() int64 {
	if x != nil {
		return x.AgentId
	}
	return 0
}

func (x *FilterAgentRequest) GetCityId() int64 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *FilterAgentRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FilterAgentRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *FilterAgentRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *FilterAgentRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *FilterAgentRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type GetAgentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Agents []*Agent `protobuf:"bytes,1,rep,name=agents,proto3" json:"agents,omitempty"`
}

func (x *GetAgentsResponse) Reset() {
	*x = GetAgentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAgentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAgentsResponse) ProtoMessage() {}

func (x *GetAgentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAgentsResponse.ProtoReflect.Descriptor instead.
func (*GetAgentsResponse) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{38}
}

func (x *GetAgentsResponse) GetAgents() []*Agent {
	if x != nil {
		return x.Agents
	}
	return nil
}

type GetAgentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Agent *Agent `protobuf:"bytes,1,opt,name=agent,proto3" json:"agent,omitempty"`
}

func (x *GetAgentResponse) Reset() {
	*x = GetAgentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAgentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAgentResponse) ProtoMessage() {}

func (x *GetAgentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAgentResponse.ProtoReflect.Descriptor instead.
func (*GetAgentResponse) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{39}
}

func (x *GetAgentResponse) GetAgent() *Agent {
	if x != nil {
		return x.Agent
	}
	return nil
}

type AssignedTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Time int64 `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *AssignedTask) Reset() {
	*x = AssignedTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignedTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignedTask) ProtoMessage() {}

func (x *AssignedTask) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignedTask.ProtoReflect.Descriptor instead.
func (*AssignedTask) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{40}
}

func (x *AssignedTask) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AssignedTask) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type AgentHomeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotchText string          `protobuf:"bytes,1,opt,name=notch_text,json=notchText,proto3" json:"notch_text,omitempty"`
	Pending   []*RouteTask    `protobuf:"bytes,2,rep,name=pending,proto3" json:"pending,omitempty"`
	Assigned  []*AssignedTask `protobuf:"bytes,3,rep,name=assigned,proto3" json:"assigned,omitempty"`
	Status    int32           `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *AgentHomeData) Reset() {
	*x = AgentHomeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentHomeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentHomeData) ProtoMessage() {}

func (x *AgentHomeData) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentHomeData.ProtoReflect.Descriptor instead.
func (*AgentHomeData) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{41}
}

func (x *AgentHomeData) GetNotchText() string {
	if x != nil {
		return x.NotchText
	}
	return ""
}

func (x *AgentHomeData) GetPending() []*RouteTask {
	if x != nil {
		return x.Pending
	}
	return nil
}

func (x *AgentHomeData) GetAssigned() []*AssignedTask {
	if x != nil {
		return x.Assigned
	}
	return nil
}

func (x *AgentHomeData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type AgentProfileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Completed int64 `protobuf:"varint,1,opt,name=completed,proto3" json:"completed,omitempty"`
	Assigned  int64 `protobuf:"varint,2,opt,name=assigned,proto3" json:"assigned,omitempty"`
	Pending   int64 `protobuf:"varint,3,opt,name=pending,proto3" json:"pending,omitempty"`
	Status    int32 `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *AgentProfileResponse) Reset() {
	*x = AgentProfileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentProfileResponse) ProtoMessage() {}

func (x *AgentProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentProfileResponse.ProtoReflect.Descriptor instead.
func (*AgentProfileResponse) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{42}
}

func (x *AgentProfileResponse) GetCompleted() int64 {
	if x != nil {
		return x.Completed
	}
	return 0
}

func (x *AgentProfileResponse) GetAssigned() int64 {
	if x != nil {
		return x.Assigned
	}
	return 0
}

func (x *AgentProfileResponse) GetPending() int64 {
	if x != nil {
		return x.Pending
	}
	return 0
}

func (x *AgentProfileResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

//Route Management Methods
type Route struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	HubId        int64  `protobuf:"varint,2,opt,name=hub_id,json=hubId,proto3" json:"hub_id,omitempty"`
	CityId       int64  `protobuf:"varint,3,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	AgentId      int64  `protobuf:"varint,4,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	Name         string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	DispatchTime int64  `protobuf:"varint,6,opt,name=dispatch_time,json=dispatchTime,proto3" json:"dispatch_time,omitempty"`
	StartTime    int64  `protobuf:"varint,7,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	DispatchType int32  `protobuf:"varint,8,opt,name=dispatch_type,json=dispatchType,proto3" json:"dispatch_type,omitempty"`
	AgentName    string `protobuf:"bytes,9,opt,name=agent_name,json=agentName,proto3" json:"agent_name,omitempty"`
	VehicleName  string `protobuf:"bytes,10,opt,name=vehicle_name,json=vehicleName,proto3" json:"vehicle_name,omitempty"`
	VehicleId    int64  `protobuf:"varint,11,opt,name=vehicle_id,json=vehicleId,proto3" json:"vehicle_id,omitempty"`
}

func (x *Route) Reset() {
	*x = Route{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Route) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Route) ProtoMessage() {}

func (x *Route) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Route.ProtoReflect.Descriptor instead.
func (*Route) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{43}
}

func (x *Route) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Route) GetHubId() int64 {
	if x != nil {
		return x.HubId
	}
	return 0
}

func (x *Route) GetCityId() int64 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *Route) GetAgentId() int64 {
	if x != nil {
		return x.AgentId
	}
	return 0
}

func (x *Route) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Route) GetDispatchTime() int64 {
	if x != nil {
		return x.DispatchTime
	}
	return 0
}

func (x *Route) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *Route) GetDispatchType() int32 {
	if x != nil {
		return x.DispatchType
	}
	return 0
}

func (x *Route) GetAgentName() string {
	if x != nil {
		return x.AgentName
	}
	return ""
}

func (x *Route) GetVehicleName() string {
	if x != nil {
		return x.VehicleName
	}
	return ""
}

func (x *Route) GetVehicleId() int64 {
	if x != nil {
		return x.VehicleId
	}
	return 0
}

type CreateRouteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HubId     int64  `protobuf:"varint,1,opt,name=hub_id,json=hubId,proto3" json:"hub_id,omitempty"`
	CityId    int64  `protobuf:"varint,2,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	AgentId   int64  `protobuf:"varint,3,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	VehicleId int64  `protobuf:"varint,4,opt,name=vehicle_id,json=vehicleId,proto3" json:"vehicle_id,omitempty"`
	Name      string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CreateRouteRequest) Reset() {
	*x = CreateRouteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRouteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRouteRequest) ProtoMessage() {}

func (x *CreateRouteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRouteRequest.ProtoReflect.Descriptor instead.
func (*CreateRouteRequest) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{44}
}

func (x *CreateRouteRequest) GetHubId() int64 {
	if x != nil {
		return x.HubId
	}
	return 0
}

func (x *CreateRouteRequest) GetCityId() int64 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *CreateRouteRequest) GetAgentId() int64 {
	if x != nil {
		return x.AgentId
	}
	return 0
}

func (x *CreateRouteRequest) GetVehicleId() int64 {
	if x != nil {
		return x.VehicleId
	}
	return 0
}

func (x *CreateRouteRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateRouteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RouteId int64 `protobuf:"varint,1,opt,name=route_id,json=routeId,proto3" json:"route_id,omitempty"`
}

func (x *CreateRouteResponse) Reset() {
	*x = CreateRouteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRouteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRouteResponse) ProtoMessage() {}

func (x *CreateRouteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRouteResponse.ProtoReflect.Descriptor instead.
func (*CreateRouteResponse) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{45}
}

func (x *CreateRouteResponse) GetRouteId() int64 {
	if x != nil {
		return x.RouteId
	}
	return 0
}

type UpdateRouteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RouteId      int64  `protobuf:"varint,1,opt,name=route_id,json=routeId,proto3" json:"route_id,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DispatchTime int64  `protobuf:"varint,3,opt,name=dispatch_time,json=dispatchTime,proto3" json:"dispatch_time,omitempty"`
	StartTime    int64  `protobuf:"varint,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
}

func (x *UpdateRouteRequest) Reset() {
	*x = UpdateRouteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRouteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRouteRequest) ProtoMessage() {}

func (x *UpdateRouteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRouteRequest.ProtoReflect.Descriptor instead.
func (*UpdateRouteRequest) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{46}
}

func (x *UpdateRouteRequest) GetRouteId() int64 {
	if x != nil {
		return x.RouteId
	}
	return 0
}

func (x *UpdateRouteRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateRouteRequest) GetDispatchTime() int64 {
	if x != nil {
		return x.DispatchTime
	}
	return 0
}

func (x *UpdateRouteRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

type UpdateRouteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateRouteResponse) Reset() {
	*x = UpdateRouteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRouteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRouteResponse) ProtoMessage() {}

func (x *UpdateRouteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRouteResponse.ProtoReflect.Descriptor instead.
func (*UpdateRouteResponse) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{47}
}

func (x *UpdateRouteResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateRouteResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetRouteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RouteId int64 `protobuf:"varint,1,opt,name=route_id,json=routeId,proto3" json:"route_id,omitempty"`
	HubId   int64 `protobuf:"varint,2,opt,name=hub_id,json=hubId,proto3" json:"hub_id,omitempty"`
	CityId  int64 `protobuf:"varint,3,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
}

func (x *GetRouteRequest) Reset() {
	*x = GetRouteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRouteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRouteRequest) ProtoMessage() {}

func (x *GetRouteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRouteRequest.ProtoReflect.Descriptor instead.
func (*GetRouteRequest) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{48}
}

func (x *GetRouteRequest) GetRouteId() int64 {
	if x != nil {
		return x.RouteId
	}
	return 0
}

func (x *GetRouteRequest) GetHubId() int64 {
	if x != nil {
		return x.HubId
	}
	return 0
}

func (x *GetRouteRequest) GetCityId() int64 {
	if x != nil {
		return x.CityId
	}
	return 0
}

type GetRoutesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Routes []*Route `protobuf:"bytes,1,rep,name=routes,proto3" json:"routes,omitempty"`
}

func (x *GetRoutesResponse) Reset() {
	*x = GetRoutesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoutesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoutesResponse) ProtoMessage() {}

func (x *GetRoutesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoutesResponse.ProtoReflect.Descriptor instead.
func (*GetRoutesResponse) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{49}
}

func (x *GetRoutesResponse) GetRoutes() []*Route {
	if x != nil {
		return x.Routes
	}
	return nil
}

type GetRouteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Route *Route `protobuf:"bytes,1,opt,name=route,proto3" json:"route,omitempty"`
}

func (x *GetRouteResponse) Reset() {
	*x = GetRouteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRouteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRouteResponse) ProtoMessage() {}

func (x *GetRouteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRouteResponse.ProtoReflect.Descriptor instead.
func (*GetRouteResponse) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{50}
}

func (x *GetRouteResponse) GetRoute() *Route {
	if x != nil {
		return x.Route
	}
	return nil
}

type AssignRouteAgentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RouteId int64 `protobuf:"varint,1,opt,name=route_id,json=routeId,proto3" json:"route_id,omitempty"`
	AgentId int64 `protobuf:"varint,2,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
}

func (x *AssignRouteAgentRequest) Reset() {
	*x = AssignRouteAgentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignRouteAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignRouteAgentRequest) ProtoMessage() {}

func (x *AssignRouteAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignRouteAgentRequest.ProtoReflect.Descriptor instead.
func (*AssignRouteAgentRequest) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{51}
}

func (x *AssignRouteAgentRequest) GetRouteId() int64 {
	if x != nil {
		return x.RouteId
	}
	return 0
}

func (x *AssignRouteAgentRequest) GetAgentId() int64 {
	if x != nil {
		return x.AgentId
	}
	return 0
}

type AssignRouteVehicleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RouteId   int64 `protobuf:"varint,1,opt,name=route_id,json=routeId,proto3" json:"route_id,omitempty"`
	VehicleId int64 `protobuf:"varint,2,opt,name=vehicle_id,json=vehicleId,proto3" json:"vehicle_id,omitempty"`
}

func (x *AssignRouteVehicleRequest) Reset() {
	*x = AssignRouteVehicleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignRouteVehicleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignRouteVehicleRequest) ProtoMessage() {}

func (x *AssignRouteVehicleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignRouteVehicleRequest.ProtoReflect.Descriptor instead.
func (*AssignRouteVehicleRequest) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{52}
}

func (x *AssignRouteVehicleRequest) GetRouteId() int64 {
	if x != nil {
		return x.RouteId
	}
	return 0
}

func (x *AssignRouteVehicleRequest) GetVehicleId() int64 {
	if x != nil {
		return x.VehicleId
	}
	return 0
}

//Route Node Methods
type RouteNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	RouteId     int64   `protobuf:"varint,2,opt,name=route_id,json=routeId,proto3" json:"route_id,omitempty"`
	ActionType  int32   `protobuf:"varint,3,opt,name=action_type,json=actionType,proto3" json:"action_type,omitempty"`
	NodeType    int32   `protobuf:"varint,4,opt,name=node_type,json=nodeType,proto3" json:"node_type,omitempty"`
	NodeId      int64   `protobuf:"varint,5,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	NodeName    string  `protobuf:"bytes,6,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	Lat         float64 `protobuf:"fixed64,7,opt,name=lat,proto3" json:"lat,omitempty"`
	Lng         float64 `protobuf:"fixed64,8,opt,name=lng,proto3" json:"lng,omitempty"`
	Seq         int64   `protobuf:"varint,9,opt,name=seq,proto3" json:"seq,omitempty"`
	NodeAddress string  `protobuf:"bytes,10,opt,name=node_address,json=nodeAddress,proto3" json:"node_address,omitempty"`
	NodeContact string  `protobuf:"bytes,11,opt,name=node_contact,json=nodeContact,proto3" json:"node_contact,omitempty"`
}

func (x *RouteNode) Reset() {
	*x = RouteNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RouteNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteNode) ProtoMessage() {}

func (x *RouteNode) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteNode.ProtoReflect.Descriptor instead.
func (*RouteNode) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{53}
}

func (x *RouteNode) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RouteNode) GetRouteId() int64 {
	if x != nil {
		return x.RouteId
	}
	return 0
}

func (x *RouteNode) GetActionType() int32 {
	if x != nil {
		return x.ActionType
	}
	return 0
}

func (x *RouteNode) GetNodeType() int32 {
	if x != nil {
		return x.NodeType
	}
	return 0
}

func (x *RouteNode) GetNodeId() int64 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *RouteNode) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *RouteNode) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *RouteNode) GetLng() float64 {
	if x != nil {
		return x.Lng
	}
	return 0
}

func (x *RouteNode) GetSeq() int64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *RouteNode) GetNodeAddress() string {
	if x != nil {
		return x.NodeAddress
	}
	return ""
}

func (x *RouteNode) GetNodeContact() string {
	if x != nil {
		return x.NodeContact
	}
	return ""
}

type SaveRouteNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RouteId int64        `protobuf:"varint,1,opt,name=route_id,json=routeId,proto3" json:"route_id,omitempty"`
	Nodes   []*RouteNode `protobuf:"bytes,2,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *SaveRouteNodeRequest) Reset() {
	*x = SaveRouteNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveRouteNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveRouteNodeRequest) ProtoMessage() {}

func (x *SaveRouteNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveRouteNodeRequest.ProtoReflect.Descriptor instead.
func (*SaveRouteNodeRequest) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{54}
}

func (x *SaveRouteNodeRequest) GetRouteId() int64 {
	if x != nil {
		return x.RouteId
	}
	return 0
}

func (x *SaveRouteNodeRequest) GetNodes() []*RouteNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type GetRouteNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RouteId int64 `protobuf:"varint,1,opt,name=route_id,json=routeId,proto3" json:"route_id,omitempty"`
}

func (x *GetRouteNodeRequest) Reset() {
	*x = GetRouteNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRouteNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRouteNodeRequest) ProtoMessage() {}

func (x *GetRouteNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRouteNodeRequest.ProtoReflect.Descriptor instead.
func (*GetRouteNodeRequest) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{55}
}

func (x *GetRouteNodeRequest) GetRouteId() int64 {
	if x != nil {
		return x.RouteId
	}
	return 0
}

type GetRouteNodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Connected    []*RouteNode `protobuf:"bytes,1,rep,name=connected,proto3" json:"connected,omitempty"`
	Disconnected []*RouteNode `protobuf:"bytes,2,rep,name=disconnected,proto3" json:"disconnected,omitempty"`
}

func (x *GetRouteNodeResponse) Reset() {
	*x = GetRouteNodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRouteNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRouteNodeResponse) ProtoMessage() {}

func (x *GetRouteNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRouteNodeResponse.ProtoReflect.Descriptor instead.
func (*GetRouteNodeResponse) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{56}
}

func (x *GetRouteNodeResponse) GetConnected() []*RouteNode {
	if x != nil {
		return x.Connected
	}
	return nil
}

func (x *GetRouteNodeResponse) GetDisconnected() []*RouteNode {
	if x != nil {
		return x.Disconnected
	}
	return nil
}

//Task Messages
type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	RouteId      int64 `protobuf:"varint,2,opt,name=route_id,json=routeId,proto3" json:"route_id,omitempty"`
	UserId       int64 `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AgentId      int64 `protobuf:"varint,4,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	StartAfter   int64 `protobuf:"varint,5,opt,name=start_after,json=startAfter,proto3" json:"start_after,omitempty"`
	EndAfter     int64 `protobuf:"varint,6,opt,name=end_after,json=endAfter,proto3" json:"end_after,omitempty"`
	VisibleAfter int64 `protobuf:"varint,7,opt,name=visible_after,json=visibleAfter,proto3" json:"visible_after,omitempty"`
	Status       int32 `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	Created      int64 `protobuf:"varint,9,opt,name=created,proto3" json:"created,omitempty"`
	CityId       int64 `protobuf:"varint,10,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	VehicleId    int64 `protobuf:"varint,11,opt,name=vehicle_id,json=vehicleId,proto3" json:"vehicle_id,omitempty"`
	AutoCancel   int32 `protobuf:"varint,12,opt,name=auto_cancel,json=autoCancel,proto3" json:"auto_cancel,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{57}
}

func (x *Task) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Task) GetRouteId() int64 {
	if x != nil {
		return x.RouteId
	}
	return 0
}

func (x *Task) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Task) GetAgentId() int64 {
	if x != nil {
		return x.AgentId
	}
	return 0
}

func (x *Task) GetStartAfter() int64 {
	if x != nil {
		return x.StartAfter
	}
	return 0
}

func (x *Task) GetEndAfter() int64 {
	if x != nil {
		return x.EndAfter
	}
	return 0
}

func (x *Task) GetVisibleAfter() int64 {
	if x != nil {
		return x.VisibleAfter
	}
	return 0
}

func (x *Task) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Task) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *Task) GetCityId() int64 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *Task) GetVehicleId() int64 {
	if x != nil {
		return x.VehicleId
	}
	return 0
}

func (x *Task) GetAutoCancel() int32 {
	if x != nil {
		return x.AutoCancel
	}
	return 0
}

//Task Template will be used for extensions like bus khabri
//Template can be for customization of task
type TaskTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyId int64  `protobuf:"varint,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *TaskTemplate) Reset() {
	*x = TaskTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskTemplate) ProtoMessage() {}

func (x *TaskTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskTemplate.ProtoReflect.Descriptor instead.
func (*TaskTemplate) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{58}
}

func (x *TaskTemplate) GetCompanyId() int64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *TaskTemplate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type TaskPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TaskId         int64   `protobuf:"varint,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	HubId          int64   `protobuf:"varint,3,opt,name=hub_id,json=hubId,proto3" json:"hub_id,omitempty"`
	UserId         int64   `protobuf:"varint,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SubscriptionId int64   `protobuf:"varint,5,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	Lat            float64 `protobuf:"fixed64,6,opt,name=lat,proto3" json:"lat,omitempty"`
	Lng            float64 `protobuf:"fixed64,7,opt,name=lng,proto3" json:"lng,omitempty"`
	Status         int32   `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	Created        int64   `protobuf:"varint,9,opt,name=created,proto3" json:"created,omitempty"`
	Name           string  `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	Contact        string  `protobuf:"bytes,11,opt,name=contact,proto3" json:"contact,omitempty"`
	AgentId        int64   `protobuf:"varint,12,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	TaskType       int32   `protobuf:"varint,13,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"`
	Address        string  `protobuf:"bytes,14,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *TaskPoint) Reset() {
	*x = TaskPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskPoint) ProtoMessage() {}

func (x *TaskPoint) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskPoint.ProtoReflect.Descriptor instead.
func (*TaskPoint) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{59}
}

func (x *TaskPoint) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TaskPoint) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *TaskPoint) GetHubId() int64 {
	if x != nil {
		return x.HubId
	}
	return 0
}

func (x *TaskPoint) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *TaskPoint) GetSubscriptionId() int64 {
	if x != nil {
		return x.SubscriptionId
	}
	return 0
}

func (x *TaskPoint) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *TaskPoint) GetLng() float64 {
	if x != nil {
		return x.Lng
	}
	return 0
}

func (x *TaskPoint) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *TaskPoint) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *TaskPoint) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TaskPoint) GetContact() string {
	if x != nil {
		return x.Contact
	}
	return ""
}

func (x *TaskPoint) GetAgentId() int64 {
	if x != nil {
		return x.AgentId
	}
	return 0
}

func (x *TaskPoint) GetTaskType() int32 {
	if x != nil {
		return x.TaskType
	}
	return 0
}

func (x *TaskPoint) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type RouteTaskMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Agent     *Agent   `protobuf:"bytes,1,opt,name=agent,proto3" json:"agent,omitempty"`
	Total     int64    `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Status    int32    `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Completed int64    `protobuf:"varint,4,opt,name=completed,proto3" json:"completed,omitempty"`
	Remaining int64    `protobuf:"varint,5,opt,name=remaining,proto3" json:"remaining,omitempty"`
	Vehicle   *Vehicle `protobuf:"bytes,6,opt,name=vehicle,proto3" json:"vehicle,omitempty"`
}

func (x *RouteTaskMeta) Reset() {
	*x = RouteTaskMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RouteTaskMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteTaskMeta) ProtoMessage() {}

func (x *RouteTaskMeta) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteTaskMeta.ProtoReflect.Descriptor instead.
func (*RouteTaskMeta) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{60}
}

func (x *RouteTaskMeta) GetAgent() *Agent {
	if x != nil {
		return x.Agent
	}
	return nil
}

func (x *RouteTaskMeta) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *RouteTaskMeta) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RouteTaskMeta) GetCompleted() int64 {
	if x != nil {
		return x.Completed
	}
	return 0
}

func (x *RouteTaskMeta) GetRemaining() int64 {
	if x != nil {
		return x.Remaining
	}
	return 0
}

func (x *RouteTaskMeta) GetVehicle() *Vehicle {
	if x != nil {
		return x.Vehicle
	}
	return nil
}

type RouteTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId   int64          `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Points   []*TaskPoint   `protobuf:"bytes,2,rep,name=points,proto3" json:"points,omitempty"`
	MetaData *RouteTaskMeta `protobuf:"bytes,3,opt,name=meta_data,json=metaData,proto3" json:"meta_data,omitempty"`
}

func (x *RouteTask) Reset() {
	*x = RouteTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RouteTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteTask) ProtoMessage() {}

func (x *RouteTask) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteTask.ProtoReflect.Descriptor instead.
func (*RouteTask) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{61}
}

func (x *RouteTask) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *RouteTask) GetPoints() []*TaskPoint {
	if x != nil {
		return x.Points
	}
	return nil
}

func (x *RouteTask) GetMetaData() *RouteTaskMeta {
	if x != nil {
		return x.MetaData
	}
	return nil
}

type GetRouteTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartStamp int64 `protobuf:"varint,1,opt,name=start_stamp,json=startStamp,proto3" json:"start_stamp,omitempty"`
	EndStamp   int64 `protobuf:"varint,2,opt,name=end_stamp,json=endStamp,proto3" json:"end_stamp,omitempty"`
	CityId     int64 `protobuf:"varint,3,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	HubId      int64 `protobuf:"varint,4,opt,name=hub_id,json=hubId,proto3" json:"hub_id,omitempty"`
	TaskId     int64 `protobuf:"varint,5,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Status     int32 `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	Limit      int64 `protobuf:"varint,7,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset     int64 `protobuf:"varint,8,opt,name=offset,proto3" json:"offset,omitempty"`
	UserId     int64 `protobuf:"varint,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RouteId    int64 `protobuf:"varint,10,opt,name=route_id,json=routeId,proto3" json:"route_id,omitempty"`
	LocationId int64 `protobuf:"varint,11,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	AgentId    int64 `protobuf:"varint,12,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
}

func (x *GetRouteTaskRequest) Reset() {
	*x = GetRouteTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRouteTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRouteTaskRequest) ProtoMessage() {}

func (x *GetRouteTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRouteTaskRequest.ProtoReflect.Descriptor instead.
func (*GetRouteTaskRequest) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{62}
}

func (x *GetRouteTaskRequest) GetStartStamp() int64 {
	if x != nil {
		return x.StartStamp
	}
	return 0
}

func (x *GetRouteTaskRequest) GetEndStamp() int64 {
	if x != nil {
		return x.EndStamp
	}
	return 0
}

func (x *GetRouteTaskRequest) GetCityId() int64 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *GetRouteTaskRequest) GetHubId() int64 {
	if x != nil {
		return x.HubId
	}
	return 0
}

func (x *GetRouteTaskRequest) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *GetRouteTaskRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetRouteTaskRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetRouteTaskRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetRouteTaskRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetRouteTaskRequest) GetRouteId() int64 {
	if x != nil {
		return x.RouteId
	}
	return 0
}

func (x *GetRouteTaskRequest) GetLocationId() int64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

func (x *GetRouteTaskRequest) GetAgentId() int64 {
	if x != nil {
		return x.AgentId
	}
	return 0
}

type GetRouteTasksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tasks []*RouteTask `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
}

func (x *GetRouteTasksResponse) Reset() {
	*x = GetRouteTasksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRouteTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRouteTasksResponse) ProtoMessage() {}

func (x *GetRouteTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRouteTasksResponse.ProtoReflect.Descriptor instead.
func (*GetRouteTasksResponse) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{63}
}

func (x *GetRouteTasksResponse) GetTasks() []*RouteTask {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type GetRouteTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Task *RouteTask `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
}

func (x *GetRouteTaskResponse) Reset() {
	*x = GetRouteTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRouteTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRouteTaskResponse) ProtoMessage() {}

func (x *GetRouteTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRouteTaskResponse.ProtoReflect.Descriptor instead.
func (*GetRouteTaskResponse) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{64}
}

func (x *GetRouteTaskResponse) GetTask() *RouteTask {
	if x != nil {
		return x.Task
	}
	return nil
}

type MakeTaskFromRouteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RouteId int64 `protobuf:"varint,1,opt,name=route_id,json=routeId,proto3" json:"route_id,omitempty"`
}

func (x *MakeTaskFromRouteRequest) Reset() {
	*x = MakeTaskFromRouteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MakeTaskFromRouteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakeTaskFromRouteRequest) ProtoMessage() {}

func (x *MakeTaskFromRouteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakeTaskFromRouteRequest.ProtoReflect.Descriptor instead.
func (*MakeTaskFromRouteRequest) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{65}
}

func (x *MakeTaskFromRouteRequest) GetRouteId() int64 {
	if x != nil {
		return x.RouteId
	}
	return 0
}

type MakeTaskFromRouteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId int64 `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *MakeTaskFromRouteResponse) Reset() {
	*x = MakeTaskFromRouteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MakeTaskFromRouteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakeTaskFromRouteResponse) ProtoMessage() {}

func (x *MakeTaskFromRouteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakeTaskFromRouteResponse.ProtoReflect.Descriptor instead.
func (*MakeTaskFromRouteResponse) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{66}
}

func (x *MakeTaskFromRouteResponse) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type UpdateRouteTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateStatus int32 `protobuf:"varint,1,opt,name=update_status,json=updateStatus,proto3" json:"update_status,omitempty"`
	TaskId       int64 `protobuf:"varint,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	AgentId      int64 `protobuf:"varint,3,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	CityId       int64 `protobuf:"varint,4,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	TaskPointId  int64 `protobuf:"varint,5,opt,name=task_point_id,json=taskPointId,proto3" json:"task_point_id,omitempty"`
}

func (x *UpdateRouteTaskRequest) Reset() {
	*x = UpdateRouteTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRouteTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRouteTaskRequest) ProtoMessage() {}

func (x *UpdateRouteTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRouteTaskRequest.ProtoReflect.Descriptor instead.
func (*UpdateRouteTaskRequest) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{67}
}

func (x *UpdateRouteTaskRequest) GetUpdateStatus() int32 {
	if x != nil {
		return x.UpdateStatus
	}
	return 0
}

func (x *UpdateRouteTaskRequest) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *UpdateRouteTaskRequest) GetAgentId() int64 {
	if x != nil {
		return x.AgentId
	}
	return 0
}

func (x *UpdateRouteTaskRequest) GetCityId() int64 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *UpdateRouteTaskRequest) GetTaskPointId() int64 {
	if x != nil {
		return x.TaskPointId
	}
	return 0
}

type CreateTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Task     *Task         `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	Template *TaskTemplate `protobuf:"bytes,2,opt,name=template,proto3" json:"template,omitempty"`
	Points   []*TaskPoint  `protobuf:"bytes,3,rep,name=points,proto3" json:"points,omitempty"`
}

func (x *CreateTaskRequest) Reset() {
	*x = CreateTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskRequest) ProtoMessage() {}

func (x *CreateTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskRequest.ProtoReflect.Descriptor instead.
func (*CreateTaskRequest) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{68}
}

func (x *CreateTaskRequest) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *CreateTaskRequest) GetTemplate() *TaskTemplate {
	if x != nil {
		return x.Template
	}
	return nil
}

func (x *CreateTaskRequest) GetPoints() []*TaskPoint {
	if x != nil {
		return x.Points
	}
	return nil
}

type CreateTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId int64 `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *CreateTaskResponse) Reset() {
	*x = CreateTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskResponse) ProtoMessage() {}

func (x *CreateTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskResponse.ProtoReflect.Descriptor instead.
func (*CreateTaskResponse) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{69}
}

func (x *CreateTaskResponse) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

//Task Point Messages
type GetTaskPointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskPointId int64 `protobuf:"varint,1,opt,name=task_point_id,json=taskPointId,proto3" json:"task_point_id,omitempty"`
	TaskId      int64 `protobuf:"varint,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *GetTaskPointRequest) Reset() {
	*x = GetTaskPointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskPointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskPointRequest) ProtoMessage() {}

func (x *GetTaskPointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskPointRequest.ProtoReflect.Descriptor instead.
func (*GetTaskPointRequest) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{70}
}

func (x *GetTaskPointRequest) GetTaskPointId() int64 {
	if x != nil {
		return x.TaskPointId
	}
	return 0
}

func (x *GetTaskPointRequest) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type GetTaskPointsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Points []*TaskPoint `protobuf:"bytes,1,rep,name=points,proto3" json:"points,omitempty"`
}

func (x *GetTaskPointsResponse) Reset() {
	*x = GetTaskPointsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskPointsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskPointsResponse) ProtoMessage() {}

func (x *GetTaskPointsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskPointsResponse.ProtoReflect.Descriptor instead.
func (*GetTaskPointsResponse) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{71}
}

func (x *GetTaskPointsResponse) GetPoints() []*TaskPoint {
	if x != nil {
		return x.Points
	}
	return nil
}

type GetTaskPointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Point *TaskPoint `protobuf:"bytes,1,opt,name=point,proto3" json:"point,omitempty"`
}

func (x *GetTaskPointResponse) Reset() {
	*x = GetTaskPointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskPointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskPointResponse) ProtoMessage() {}

func (x *GetTaskPointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskPointResponse.ProtoReflect.Descriptor instead.
func (*GetTaskPointResponse) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{72}
}

func (x *GetTaskPointResponse) GetPoint() *TaskPoint {
	if x != nil {
		return x.Point
	}
	return nil
}

type AssignTaskAgentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId  int64 `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	AgentId int64 `protobuf:"varint,2,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
}

func (x *AssignTaskAgentRequest) Reset() {
	*x = AssignTaskAgentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignTaskAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignTaskAgentRequest) ProtoMessage() {}

func (x *AssignTaskAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignTaskAgentRequest.ProtoReflect.Descriptor instead.
func (*AssignTaskAgentRequest) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{73}
}

func (x *AssignTaskAgentRequest) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *AssignTaskAgentRequest) GetAgentId() int64 {
	if x != nil {
		return x.AgentId
	}
	return 0
}

type TansferTaskPointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskPointId int64 `protobuf:"varint,1,opt,name=task_point_id,json=taskPointId,proto3" json:"task_point_id,omitempty"`
	AgentId     int64 `protobuf:"varint,2,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
}

func (x *TansferTaskPointRequest) Reset() {
	*x = TansferTaskPointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TansferTaskPointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TansferTaskPointRequest) ProtoMessage() {}

func (x *TansferTaskPointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TansferTaskPointRequest.ProtoReflect.Descriptor instead.
func (*TansferTaskPointRequest) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{74}
}

func (x *TansferTaskPointRequest) GetTaskPointId() int64 {
	if x != nil {
		return x.TaskPointId
	}
	return 0
}

func (x *TansferTaskPointRequest) GetAgentId() int64 {
	if x != nil {
		return x.AgentId
	}
	return 0
}

//RealRoute Code: Start
//Locations Messages
type Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CityId  int64   `protobuf:"varint,2,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	Name    string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Address string  `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	Contact string  `protobuf:"bytes,5,opt,name=contact,proto3" json:"contact,omitempty"`
	Lat     float64 `protobuf:"fixed64,6,opt,name=lat,proto3" json:"lat,omitempty"`
	Lng     float64 `protobuf:"fixed64,7,opt,name=lng,proto3" json:"lng,omitempty"`
}

func (x *Location) Reset() {
	*x = Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{75}
}

func (x *Location) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Location) GetCityId() int64 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *Location) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Location) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Location) GetContact() string {
	if x != nil {
		return x.Contact
	}
	return ""
}

func (x *Location) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *Location) GetLng() float64 {
	if x != nil {
		return x.Lng
	}
	return 0
}

type CreateLocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CityId  int64   `protobuf:"varint,1,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	Name    string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Address string  `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Contact string  `protobuf:"bytes,4,opt,name=contact,proto3" json:"contact,omitempty"`
	Lat     float64 `protobuf:"fixed64,5,opt,name=lat,proto3" json:"lat,omitempty"`
	Lng     float64 `protobuf:"fixed64,6,opt,name=lng,proto3" json:"lng,omitempty"`
}

func (x *CreateLocationRequest) Reset() {
	*x = CreateLocationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLocationRequest) ProtoMessage() {}

func (x *CreateLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLocationRequest.ProtoReflect.Descriptor instead.
func (*CreateLocationRequest) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{76}
}

func (x *CreateLocationRequest) GetCityId() int64 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *CreateLocationRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateLocationRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *CreateLocationRequest) GetContact() string {
	if x != nil {
		return x.Contact
	}
	return ""
}

func (x *CreateLocationRequest) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *CreateLocationRequest) GetLng() float64 {
	if x != nil {
		return x.Lng
	}
	return 0
}

type CreateLocationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationId int64 `protobuf:"varint,1,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
}

func (x *CreateLocationResponse) Reset() {
	*x = CreateLocationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLocationResponse) ProtoMessage() {}

func (x *CreateLocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLocationResponse.ProtoReflect.Descriptor instead.
func (*CreateLocationResponse) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{77}
}

func (x *CreateLocationResponse) GetLocationId() int64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

type UpdateLocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationId int64   `protobuf:"varint,1,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	Name       string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Address    string  `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Contact    string  `protobuf:"bytes,4,opt,name=contact,proto3" json:"contact,omitempty"`
	Lat        float64 `protobuf:"fixed64,5,opt,name=lat,proto3" json:"lat,omitempty"`
	Lng        float64 `protobuf:"fixed64,6,opt,name=lng,proto3" json:"lng,omitempty"`
}

func (x *UpdateLocationRequest) Reset() {
	*x = UpdateLocationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLocationRequest) ProtoMessage() {}

func (x *UpdateLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLocationRequest.ProtoReflect.Descriptor instead.
func (*UpdateLocationRequest) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{78}
}

func (x *UpdateLocationRequest) GetLocationId() int64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

func (x *UpdateLocationRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateLocationRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *UpdateLocationRequest) GetContact() string {
	if x != nil {
		return x.Contact
	}
	return ""
}

func (x *UpdateLocationRequest) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *UpdateLocationRequest) GetLng() float64 {
	if x != nil {
		return x.Lng
	}
	return 0
}

type UpdateLocationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateLocationResponse) Reset() {
	*x = UpdateLocationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLocationResponse) ProtoMessage() {}

func (x *UpdateLocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLocationResponse.ProtoReflect.Descriptor instead.
func (*UpdateLocationResponse) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{79}
}

func (x *UpdateLocationResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateLocationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetLocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationId int64 `protobuf:"varint,1,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	CityId     int64 `protobuf:"varint,2,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
}

func (x *GetLocationRequest) Reset() {
	*x = GetLocationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocationRequest) ProtoMessage() {}

func (x *GetLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocationRequest.ProtoReflect.Descriptor instead.
func (*GetLocationRequest) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{80}
}

func (x *GetLocationRequest) GetLocationId() int64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

func (x *GetLocationRequest) GetCityId() int64 {
	if x != nil {
		return x.CityId
	}
	return 0
}

type GetLocationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Locations []*Location `protobuf:"bytes,1,rep,name=locations,proto3" json:"locations,omitempty"`
}

func (x *GetLocationsResponse) Reset() {
	*x = GetLocationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLocationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocationsResponse) ProtoMessage() {}

func (x *GetLocationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocationsResponse.ProtoReflect.Descriptor instead.
func (*GetLocationsResponse) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{81}
}

func (x *GetLocationsResponse) GetLocations() []*Location {
	if x != nil {
		return x.Locations
	}
	return nil
}

type GetLocationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location *Location `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *GetLocationResponse) Reset() {
	*x = GetLocationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocationResponse) ProtoMessage() {}

func (x *GetLocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocationResponse.ProtoReflect.Descriptor instead.
func (*GetLocationResponse) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{82}
}

func (x *GetLocationResponse) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

//Vehicle Messages
type VehicleType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *VehicleType) Reset() {
	*x = VehicleType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleType) ProtoMessage() {}

func (x *VehicleType) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleType.ProtoReflect.Descriptor instead.
func (*VehicleType) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{83}
}

func (x *VehicleType) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *VehicleType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Vehicle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CityId    int64   `protobuf:"varint,2,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	CompanyId int64   `protobuf:"varint,3,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	Name      string  `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Photo     string  `protobuf:"bytes,5,opt,name=photo,proto3" json:"photo,omitempty"`
	Type      int32   `protobuf:"varint,6,opt,name=type,proto3" json:"type,omitempty"`
	Lat       float64 `protobuf:"fixed64,7,opt,name=lat,proto3" json:"lat,omitempty"`
	Lng       float64 `protobuf:"fixed64,8,opt,name=lng,proto3" json:"lng,omitempty"`
	Status    int32   `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
	Created   int64   `protobuf:"varint,10,opt,name=created,proto3" json:"created,omitempty"`
}

func (x *Vehicle) Reset() {
	*x = Vehicle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vehicle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vehicle) ProtoMessage() {}

func (x *Vehicle) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vehicle.ProtoReflect.Descriptor instead.
func (*Vehicle) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{84}
}

func (x *Vehicle) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Vehicle) GetCityId() int64 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *Vehicle) GetCompanyId() int64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *Vehicle) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Vehicle) GetPhoto() string {
	if x != nil {
		return x.Photo
	}
	return ""
}

func (x *Vehicle) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Vehicle) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *Vehicle) GetLng() float64 {
	if x != nil {
		return x.Lng
	}
	return 0
}

func (x *Vehicle) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Vehicle) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

type CreateVehicleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CityId    int64  `protobuf:"varint,1,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	CompanyId int64  `protobuf:"varint,2,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	Name      string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Type      int32  `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *CreateVehicleRequest) Reset() {
	*x = CreateVehicleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVehicleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVehicleRequest) ProtoMessage() {}

func (x *CreateVehicleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVehicleRequest.ProtoReflect.Descriptor instead.
func (*CreateVehicleRequest) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{85}
}

func (x *CreateVehicleRequest) GetCityId() int64 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *CreateVehicleRequest) GetCompanyId() int64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *CreateVehicleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateVehicleRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type CreateVehicleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VehicleId int64 `protobuf:"varint,1,opt,name=vehicle_id,json=vehicleId,proto3" json:"vehicle_id,omitempty"`
}

func (x *CreateVehicleResponse) Reset() {
	*x = CreateVehicleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVehicleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVehicleResponse) ProtoMessage() {}

func (x *CreateVehicleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVehicleResponse.ProtoReflect.Descriptor instead.
func (*CreateVehicleResponse) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{86}
}

func (x *CreateVehicleResponse) GetVehicleId() int64 {
	if x != nil {
		return x.VehicleId
	}
	return 0
}

type UpdateVehicleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VehicleId int64   `protobuf:"varint,1,opt,name=vehicle_id,json=vehicleId,proto3" json:"vehicle_id,omitempty"`
	Name      string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type      int32   `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Image     string  `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	Lat       float64 `protobuf:"fixed64,5,opt,name=lat,proto3" json:"lat,omitempty"`
	Lng       float64 `protobuf:"fixed64,6,opt,name=lng,proto3" json:"lng,omitempty"`
}

func (x *UpdateVehicleRequest) Reset() {
	*x = UpdateVehicleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVehicleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVehicleRequest) ProtoMessage() {}

func (x *UpdateVehicleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVehicleRequest.ProtoReflect.Descriptor instead.
func (*UpdateVehicleRequest) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{87}
}

func (x *UpdateVehicleRequest) GetVehicleId() int64 {
	if x != nil {
		return x.VehicleId
	}
	return 0
}

func (x *UpdateVehicleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateVehicleRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *UpdateVehicleRequest) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *UpdateVehicleRequest) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *UpdateVehicleRequest) GetLng() float64 {
	if x != nil {
		return x.Lng
	}
	return 0
}

type UpdateVehicleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateVehicleResponse) Reset() {
	*x = UpdateVehicleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVehicleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVehicleResponse) ProtoMessage() {}

func (x *UpdateVehicleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVehicleResponse.ProtoReflect.Descriptor instead.
func (*UpdateVehicleResponse) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{88}
}

func (x *UpdateVehicleResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateVehicleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetVehicleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VehicleId int64 `protobuf:"varint,1,opt,name=vehicle_id,json=vehicleId,proto3" json:"vehicle_id,omitempty"`
	CityId    int64 `protobuf:"varint,2,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	CompanyId int64 `protobuf:"varint,3,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
}

func (x *GetVehicleRequest) Reset() {
	*x = GetVehicleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVehicleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVehicleRequest) ProtoMessage() {}

func (x *GetVehicleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVehicleRequest.ProtoReflect.Descriptor instead.
func (*GetVehicleRequest) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{89}
}

func (x *GetVehicleRequest) GetVehicleId() int64 {
	if x != nil {
		return x.VehicleId
	}
	return 0
}

func (x *GetVehicleRequest) GetCityId() int64 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *GetVehicleRequest) GetCompanyId() int64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

type GetVehicleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vehicle *Vehicle `protobuf:"bytes,1,opt,name=vehicle,proto3" json:"vehicle,omitempty"`
}

func (x *GetVehicleResponse) Reset() {
	*x = GetVehicleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVehicleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVehicleResponse) ProtoMessage() {}

func (x *GetVehicleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVehicleResponse.ProtoReflect.Descriptor instead.
func (*GetVehicleResponse) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{90}
}

func (x *GetVehicleResponse) GetVehicle() *Vehicle {
	if x != nil {
		return x.Vehicle
	}
	return nil
}

type GetVehiclesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vehicles []*Vehicle `protobuf:"bytes,1,rep,name=vehicles,proto3" json:"vehicles,omitempty"`
}

func (x *GetVehiclesResponse) Reset() {
	*x = GetVehiclesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVehiclesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVehiclesResponse) ProtoMessage() {}

func (x *GetVehiclesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVehiclesResponse.ProtoReflect.Descriptor instead.
func (*GetVehiclesResponse) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{91}
}

func (x *GetVehiclesResponse) GetVehicles() []*Vehicle {
	if x != nil {
		return x.Vehicles
	}
	return nil
}

//Real Route App Message
type GetAppHomeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskCount    int64        `protobuf:"varint,1,opt,name=task_count,json=taskCount,proto3" json:"task_count,omitempty"`
	PendingCount int64        `protobuf:"varint,2,opt,name=pending_count,json=pendingCount,proto3" json:"pending_count,omitempty"`
	AgentCount   int64        `protobuf:"varint,3,opt,name=agent_count,json=agentCount,proto3" json:"agent_count,omitempty"`
	Tasks        []*RouteTask `protobuf:"bytes,4,rep,name=tasks,proto3" json:"tasks,omitempty"`
}

func (x *GetAppHomeResponse) Reset() {
	*x = GetAppHomeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppHomeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppHomeResponse) ProtoMessage() {}

func (x *GetAppHomeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppHomeResponse.ProtoReflect.Descriptor instead.
func (*GetAppHomeResponse) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{92}
}

func (x *GetAppHomeResponse) GetTaskCount() int64 {
	if x != nil {
		return x.TaskCount
	}
	return 0
}

func (x *GetAppHomeResponse) GetPendingCount() int64 {
	if x != nil {
		return x.PendingCount
	}
	return 0
}

func (x *GetAppHomeResponse) GetAgentCount() int64 {
	if x != nil {
		return x.AgentCount
	}
	return 0
}

func (x *GetAppHomeResponse) GetTasks() []*RouteTask {
	if x != nil {
		return x.Tasks
	}
	return nil
}

//Tracking Data Messages
type GetTrackingDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId int64 `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *GetTrackingDataRequest) Reset() {
	*x = GetTrackingDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTrackingDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrackingDataRequest) ProtoMessage() {}

func (x *GetTrackingDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrackingDataRequest.ProtoReflect.Descriptor instead.
func (*GetTrackingDataRequest) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{93}
}

func (x *GetTrackingDataRequest) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type GetTrackingDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Company *GetTrackingDataResponse_TrackingCompany `protobuf:"bytes,1,opt,name=company,proto3" json:"company,omitempty"`
	CityId  int64                                    `protobuf:"varint,2,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	Task    *RouteTask                               `protobuf:"bytes,3,opt,name=task,proto3" json:"task,omitempty"`
}

func (x *GetTrackingDataResponse) Reset() {
	*x = GetTrackingDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTrackingDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrackingDataResponse) ProtoMessage() {}

func (x *GetTrackingDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrackingDataResponse.ProtoReflect.Descriptor instead.
func (*GetTrackingDataResponse) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{94}
}

func (x *GetTrackingDataResponse) GetCompany() *GetTrackingDataResponse_TrackingCompany {
	if x != nil {
		return x.Company
	}
	return nil
}

func (x *GetTrackingDataResponse) GetCityId() int64 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *GetTrackingDataResponse) GetTask() *RouteTask {
	if x != nil {
		return x.Task
	}
	return nil
}

type GetTrackingDataResponse_TrackingCompany struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Contact string `protobuf:"bytes,2,opt,name=contact,proto3" json:"contact,omitempty"`
}

func (x *GetTrackingDataResponse_TrackingCompany) Reset() {
	*x = GetTrackingDataResponse_TrackingCompany{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistics_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTrackingDataResponse_TrackingCompany) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrackingDataResponse_TrackingCompany) ProtoMessage() {}

func (x *GetTrackingDataResponse_TrackingCompany) ProtoReflect() protoreflect.Message {
	mi := &file_logistics_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrackingDataResponse_TrackingCompany.ProtoReflect.Descriptor instead.
func (*GetTrackingDataResponse_TrackingCompany) Descriptor() ([]byte, []int) {
	return file_logistics_proto_rawDescGZIP(), []int{94, 0}
}

func (x *GetTrackingDataResponse_TrackingCompany) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetTrackingDataResponse_TrackingCompany) GetContact() string {
	if x != nil {
		return x.Contact
	}
	return ""
}

var File_logistics_proto protoreflect.FileDescriptor

var file_logistics_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x07, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x22, 0x32, 0x0a, 0x08, 0x4b, 0x65,
	0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xf4,
	0x03, 0x0a, 0x0c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x6c, 0x76, 0x5f, 0x69, 0x6e,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x64, 0x6c, 0x76, 0x49, 0x6e, 0x73, 0x12,
	0x19, 0x0a, 0x08, 0x64, 0x6c, 0x76, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x64, 0x6c, 0x76, 0x44, 0x61, 0x79, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x75,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x73, 0x75, 0x6e, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6d, 0x6f, 0x6e, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x74, 0x75, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x77, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x77,
	0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x68, 0x75, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x03, 0x74, 0x68, 0x75, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x72, 0x69, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x03, 0x66, 0x72, 0x69, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x61, 0x74, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x03, 0x73, 0x61, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x74, 0x74,
	0x65, 0x72, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f,
	0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x63, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x68, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x68, 0x75, 0x62, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x65, 0x78, 0x70, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x65,
	0x78, 0x70, 0x45, 0x6e, 0x64, 0x22, 0xf6, 0x02, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x6c,
	0x76, 0x5f, 0x69, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x64, 0x6c, 0x76,
	0x49, 0x6e, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x6c, 0x76, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x6c, 0x76, 0x44, 0x61, 0x79, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x73, 0x75, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x73, 0x75, 0x6e,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6d,
	0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x03, 0x74, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x77, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x03, 0x77, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x68, 0x75, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x03, 0x74, 0x68, 0x75, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x72, 0x69, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x66, 0x72, 0x69, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x61,
	0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x73, 0x61, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70,
	0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x22, 0x45,
	0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x9e, 0x03, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x6c,
	0x76, 0x5f, 0x69, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x64, 0x6c, 0x76,
	0x49, 0x6e, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x6c, 0x76, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x6c, 0x76, 0x44, 0x61, 0x79, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x73, 0x75, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x73, 0x75, 0x6e,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6d,
	0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x03, 0x74, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x77, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x03, 0x77, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x68, 0x75, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x03, 0x74, 0x68, 0x75, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x72, 0x69, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x66, 0x72, 0x69, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x61,
	0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x73, 0x61, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70,
	0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x5f, 0x0a, 0x1d, 0x44, 0x65, 0x74, 0x65, 0x72, 0x6d,
	0x69, 0x6e, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x25, 0x0a, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3a, 0x0a, 0x1e, 0x44, 0x65, 0x74, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x22, 0xa8, 0x02, 0x0a, 0x19, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x69,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x68, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x68, 0x75, 0x62, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x6f,
	0x6d, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x72,
	0x6f, 0x6d, 0x44, 0x61, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x22, 0x41,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0x57, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a,
	0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x54, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6a, 0x75,
	0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x3a, 0x0a, 0x0a, 0x53, 0x75, 0x62, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x76, 0x0a, 0x08,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x22, 0x43, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x71, 0x74, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x71, 0x74, 0x79, 0x22, 0xe7, 0x01, 0x0a, 0x10, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2b,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2d, 0x0a, 0x08, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x07, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6a, 0x75,
	0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65,
	0x6e, 0x65, 0x77, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x72, 0x65, 0x6e, 0x65, 0x77, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x22, 0x5f, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6a, 0x75, 0x73,
	0x74, 0x69, 0x66, 0x79, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x4d, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66,
	0x79, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x22, 0x5e, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6a, 0x75, 0x73, 0x74,
	0x69, 0x66, 0x79, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x7a, 0x0a, 0x10, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x68,
	0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x68, 0x75, 0x62,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x75, 0x62, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x75, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x71, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x71, 0x74, 0x79, 0x22,
	0x49, 0x0a, 0x11, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x71, 0x74, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x71, 0x74, 0x79, 0x22, 0x50, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x76, 0x65, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66,
	0x79, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x22, 0x58, 0x0a, 0x1c,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x09,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x09, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x22, 0xc5, 0x01, 0x0a, 0x04, 0x53, 0x6c, 0x6f, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x68, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x48, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6d, 0x69, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x69, 0x6e,
	0x12, 0x15, 0x0a, 0x06, 0x65, 0x6e, 0x64, 0x5f, 0x68, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x65, 0x6e, 0x64, 0x48, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x5f, 0x6d,
	0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x65, 0x6e, 0x64, 0x4d, 0x69, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0xaa,
	0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x68, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x48, 0x72, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6d, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x69, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x65,
	0x6e, 0x64, 0x5f, 0x68, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x65, 0x6e, 0x64,
	0x48, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x5f, 0x6d, 0x69, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x65, 0x6e, 0x64, 0x4d, 0x69, 0x6e, 0x22, 0x2d, 0x0a, 0x12, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x22, 0xc2, 0x01, 0x0a, 0x11, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x68, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x48, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6d, 0x69,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x69,
	0x6e, 0x12, 0x15, 0x0a, 0x06, 0x65, 0x6e, 0x64, 0x5f, 0x68, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x48, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x5f,
	0x6d, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x65, 0x6e, 0x64, 0x4d, 0x69,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22,
	0x46, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x42, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x6c,
	0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x69, 0x74,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x22, 0x37, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x23, 0x0a, 0x05, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x05, 0x73,
	0x6c, 0x6f, 0x74, 0x73, 0x22, 0x34, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e,
	0x53, 0x6c, 0x6f, 0x74, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x22, 0xca, 0x01, 0x0a, 0x05, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x6c, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x6c, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x6e,
	0x67, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x73, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x30, 0x0a, 0x13,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xb3,
	0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6e,
	0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x22, 0x47, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x77, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63,
	0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x22, 0xb8, 0x01, 0x0a, 0x12, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x69, 0x74, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x22, 0x3b, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79,
	0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x38,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x52, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x22, 0x32, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0xa7, 0x01, 0x0a,
	0x0d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d,
	0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x63, 0x68, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x6f, 0x74, 0x63, 0x68, 0x54, 0x65, 0x78, 0x74, 0x12, 0x2c, 0x0a,
	0x07, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x07, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x31, 0x0a, 0x08, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x08, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x14, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x65, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xc0, 0x02, 0x0a, 0x05,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x68, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x68, 0x75, 0x62, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x63, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x69, 0x73,
	0x70, 0x61, 0x74, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x70,
	0x61, 0x74, 0x63, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x92,
	0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x68, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x68, 0x75, 0x62, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x63, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x30, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x49, 0x64, 0x22, 0x87, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64,
	0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x47, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x5c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x68, 0x75, 0x62, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x68, 0x75, 0x62, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x3b, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6a, 0x75,
	0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x06, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x73, 0x22, 0x38, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79,
	0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x22, 0x4f, 0x0a,
	0x17, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x55,
	0x0a, 0x19, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x76, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x49, 0x64, 0x22, 0xa6, 0x02, 0x0a, 0x09, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x4e,
	0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6e,
	0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x03, 0x6c, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x03, 0x6c, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6e, 0x6f, 0x64, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6e,
	0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x22, 0x5b,
	0x0a, 0x14, 0x53, 0x61, 0x76, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x49,
	0x64, 0x12, 0x28, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x30, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x64, 0x22, 0x80, 0x01,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6a, 0x75, 0x73, 0x74,
	0x69, 0x66, 0x79, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x09, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x36, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x4e, 0x6f,
	0x64, 0x65, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x22, 0xd3, 0x02, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x41, 0x66, 0x74, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x64,
	0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x65, 0x6e,
	0x64, 0x41, 0x66, 0x74, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c,
	0x65, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x76,
	0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x41, 0x66, 0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x76, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x63, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x6f,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x22, 0x41, 0x0a, 0x0c, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xe3, 0x02, 0x0a, 0x09, 0x54, 0x61,
	0x73, 0x6b, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64,
	0x12, 0x15, 0x0a, 0x06, 0x68, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x68, 0x75, 0x62, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x27, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c,
	0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x6e, 0x67, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x61, 0x73,
	0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22,
	0xcb, 0x01, 0x0a, 0x0d, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x65, 0x74,
	0x61, 0x12, 0x24, 0x0a, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x52, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x12, 0x2a, 0x0a, 0x07, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x52, 0x07, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x22, 0x85, 0x01,
	0x0a, 0x09, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x17, 0x0a, 0x07, 0x74,
	0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61,
	0x73, 0x6b, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x12, 0x33, 0x0a, 0x09, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x44, 0x61, 0x74, 0x61, 0x22, 0xd2, 0x02, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b,
	0x0a, 0x09, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x63,
	0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x68, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x68, 0x75, 0x62, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74,
	0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61,
	0x73, 0x6b, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x22, 0x3e, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x22, 0x35, 0x0a,
	0x18, 0x4d, 0x61, 0x6b, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x19, 0x4d, 0x61, 0x6b, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0xae, 0x01, 0x0a, 0x16, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x73,
	0x6b, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x74, 0x61, 0x73, 0x6b, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x95, 0x01, 0x0a, 0x11,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04,
	0x74, 0x61, 0x73, 0x6b, 0x12, 0x31, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x08, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66,
	0x79, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x06, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x22, 0x2d, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b,
	0x49, 0x64, 0x22, 0x52, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x74, 0x61, 0x73, 0x6b, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x43, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2a, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x40, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x4c, 0x0a,
	0x16, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x58, 0x0a, 0x17, 0x54,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74,
	0x61, 0x73, 0x6b, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x9f, 0x01, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x03, 0x6c, 0x6e, 0x67, 0x22, 0x9c, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x03, 0x6c, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x03, 0x6c, 0x6e, 0x67, 0x22, 0x39, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0xa4, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6e, 0x67, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x6e, 0x67, 0x22, 0x4a, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x4e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63,
	0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x22, 0x47, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x09,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x44, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79,
	0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x31, 0x0a, 0x0b, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xe5, 0x01, 0x0a, 0x07, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x68, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6e,
	0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0x76,
	0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x36, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x97,
	0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x76, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6e, 0x67, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x6e, 0x67, 0x22, 0x49, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x6a, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x76, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x69, 0x74, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x22,
	0x40, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79,
	0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x07, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x22, 0x43, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x76, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6a, 0x75, 0x73,
	0x74, 0x69, 0x66, 0x79, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x08, 0x76, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x22, 0xa3, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x70,
	0x70, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d,
	0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x28, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x22, 0x31, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22,
	0xe7, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x07, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6a,
	0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54,
	0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x07,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x69, 0x74, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x12, 0x26, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x1a, 0x3f, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x32, 0xef, 0x22, 0x0a, 0x10, 0x4c, 0x6f,
	0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5d,
	0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69,
	0x66, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a,
	0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x22, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66,
	0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x18,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69,
	0x66, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6a,
	0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x69, 0x0a, 0x16, 0x44, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x26, 0x2e, 0x6a, 0x75,
	0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x44, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x44, 0x65,
	0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x79, 0x49, 0x64, 0x12, 0x1f, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x22,
	0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x12, 0x22, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66,
	0x79, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x58, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x22, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69,
	0x66, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x73, 0x12, 0x22, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66,
	0x79, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45,
	0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x1a, 0x2e, 0x6a,
	0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6c, 0x6f,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69,
	0x66, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x6c, 0x6f, 0x74, 0x12, 0x1a, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0c,
	0x47, 0x65, 0x74, 0x43, 0x69, 0x74, 0x79, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x12, 0x17, 0x2e, 0x6a,
	0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x40, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12,
	0x17, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6c, 0x6f,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69,
	0x66, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x46, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6c, 0x6f, 0x74,
	0x42, 0x79, 0x49, 0x64, 0x12, 0x17, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6c,
	0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x2e, 0x6a, 0x75, 0x73, 0x74,
	0x69, 0x66, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x12, 0x1b, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e,
	0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1b, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50,
	0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4e, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1b, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x47, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x4f, 0x66, 0x43,
	0x69, 0x74, 0x79, 0x12, 0x18, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0b, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69,
	0x66, 0x79, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x43, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49,
	0x64, 0x12, 0x18, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6a, 0x75,
	0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0b, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x19, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0d, 0x49, 0x6e,
	0x69, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x12, 0x18, 0x2e, 0x6a, 0x75,
	0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4b, 0x0a,
	0x10, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x18, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6a, 0x75,
	0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x6a, 0x75, 0x73, 0x74,
	0x69, 0x66, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x4f, 0x66, 0x48, 0x75, 0x62,
	0x12, 0x18, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6a, 0x75, 0x73,
	0x74, 0x69, 0x66, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x73, 0x4f, 0x66, 0x43, 0x69, 0x74, 0x79, 0x12, 0x18, 0x2e, 0x6a, 0x75, 0x73, 0x74,
	0x69, 0x66, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x43, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x42, 0x79, 0x49, 0x64, 0x12,
	0x18, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6a, 0x75, 0x73, 0x74,
	0x69, 0x66, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x10, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69,
	0x66, 0x79, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6a, 0x75, 0x73,
	0x74, 0x69, 0x66, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x12, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x22,
	0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4c, 0x0a, 0x0d, 0x53, 0x61, 0x76, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x4e, 0x6f, 0x64,
	0x65, 0x12, 0x1d, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x53, 0x61, 0x76, 0x65,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x4f, 0x66,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5a, 0x0a, 0x11, 0x4d, 0x61, 0x6b, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x72,
	0x6f, 0x6d, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x21, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66,
	0x79, 0x2e, 0x4d, 0x61, 0x6b, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6a, 0x75, 0x73,
	0x74, 0x69, 0x66, 0x79, 0x2e, 0x4d, 0x61, 0x6b, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x72, 0x6f,
	0x6d, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50,
	0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x12, 0x1f, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4c, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x12, 0x1c, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79,
	0x49, 0x64, 0x12, 0x1c, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4d, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x12, 0x1c, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x42, 0x79,
	0x49, 0x64, 0x12, 0x1c, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x61, 0x73, 0x6b, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4f, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x72, 0x6f,
	0x6d, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x1a, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66,
	0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x50, 0x0a, 0x0f, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x12, 0x1f, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x53, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x61,
	0x73, 0x6b, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x20, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66,
	0x79, 0x2e, 0x54, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6a, 0x75, 0x73, 0x74,
	0x69, 0x66, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x48, 0x6f,
	0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79,
	0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x51, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0d, 0x43, 0x69, 0x74, 0x79, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1b, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69,
	0x66, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e,
	0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1b, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66,
	0x79, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x47,
	0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x12, 0x1d, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x12, 0x1d, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x53, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69,
	0x66, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66,
	0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1d, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1e, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x45, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x1a, 0x2e,
	0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6a, 0x75, 0x73, 0x74,
	0x69, 0x66, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x73, 0x4f, 0x66, 0x43, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x2e, 0x6a, 0x75,
	0x73, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66,
	0x79, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x2e, 0x6a, 0x75, 0x73, 0x74, 0x69,
	0x66, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6a, 0x75, 0x73, 0x74,
	0x69, 0x66, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x11, 0x5a, 0x0f, 0x2e,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_logistics_proto_rawDescOnce sync.Once
	file_logistics_proto_rawDescData = file_logistics_proto_rawDesc
)

func file_logistics_proto_rawDescGZIP() []byte {
	file_logistics_proto_rawDescOnce.Do(func() {
		file_logistics_proto_rawDescData = protoimpl.X.CompressGZIP(file_logistics_proto_rawDescData)
	})
	return file_logistics_proto_rawDescData
}

var file_logistics_proto_msgTypes = make([]protoimpl.MessageInfo, 96)
var file_logistics_proto_goTypes = []interface{}{
	(*KeyValue)(nil),                                // 0: justify.KeyValue
	(*Subscription)(nil),                            // 1: justify.Subscription
	(*CreateSubscriptionRequest)(nil),               // 2: justify.CreateSubscriptionRequest
	(*CreateSubscriptionResponse)(nil),              // 3: justify.CreateSubscriptionResponse
	(*UpdateSubscriptionRequest)(nil),               // 4: justify.UpdateSubscriptionRequest
	(*UpdateSubscriptionResponse)(nil),              // 5: justify.UpdateSubscriptionResponse
	(*DetermineWalletBalanceRequest)(nil),           // 6: justify.DetermineWalletBalanceRequest
	(*DetermineWalletBalanceResponse)(nil),          // 7: justify.DetermineWalletBalanceResponse
	(*FilterSubscriptionRequest)(nil),               // 8: justify.FilterSubscriptionRequest
	(*GetSubscriptionRequest)(nil),                  // 9: justify.GetSubscriptionRequest
	(*GetSubscriptionsResponse)(nil),                // 10: justify.GetSubscriptionsResponse
	(*GetSubscriptionResponse)(nil),                 // 11: justify.GetSubscriptionResponse
	(*SubsStatus)(nil),                              // 12: justify.SubsStatus
	(*Customer)(nil),                                // 13: justify.Customer
	(*ProductItem)(nil),                             // 14: justify.ProductItem
	(*SubscriptionInfo)(nil),                        // 15: justify.SubscriptionInfo
	(*GetInfoSubscriptionsResponse)(nil),            // 16: justify.GetInfoSubscriptionsResponse
	(*GetSubscriptionSummaryResponse)(nil),          // 17: justify.GetSubscriptionSummaryResponse
	(*GetInfoSubscriptionResponse)(nil),             // 18: justify.GetInfoSubscriptionResponse
	(*InventoryProduct)(nil),                        // 19: justify.InventoryProduct
	(*InventoryCustomer)(nil),                       // 20: justify.InventoryCustomer
	(*GetInvetoryDataResponse)(nil),                 // 21: justify.GetInvetoryDataResponse
	(*GetInvetoryCustomersResponse)(nil),            // 22: justify.GetInvetoryCustomersResponse
	(*Slot)(nil),                                    // 23: justify.Slot
	(*CreateSlotRequest)(nil),                       // 24: justify.CreateSlotRequest
	(*CreateSlotResponse)(nil),                      // 25: justify.CreateSlotResponse
	(*UpdateSlotRequest)(nil),                       // 26: justify.UpdateSlotRequest
	(*UpdateSlotResponse)(nil),                      // 27: justify.UpdateSlotResponse
	(*GetSlotRequest)(nil),                          // 28: justify.GetSlotRequest
	(*GetSlotsResponse)(nil),                        // 29: justify.GetSlotsResponse
	(*GetSlotResponse)(nil),                         // 30: justify.GetSlotResponse
	(*Agent)(nil),                                   // 31: justify.Agent
	(*CreateAgentRequest)(nil),                      // 32: justify.CreateAgentRequest
	(*CreateAgentResponse)(nil),                     // 33: justify.CreateAgentResponse
	(*UpdateAgentRequest)(nil),                      // 34: justify.UpdateAgentRequest
	(*UpdateAgentResponse)(nil),                     // 35: justify.UpdateAgentResponse
	(*GetAgentRequest)(nil),                         // 36: justify.GetAgentRequest
	(*FilterAgentRequest)(nil),                      // 37: justify.FilterAgentRequest
	(*GetAgentsResponse)(nil),                       // 38: justify.GetAgentsResponse
	(*GetAgentResponse)(nil),                        // 39: justify.GetAgentResponse
	(*AssignedTask)(nil),                            // 40: justify.AssignedTask
	(*AgentHomeData)(nil),                           // 41: justify.AgentHomeData
	(*AgentProfileResponse)(nil),                    // 42: justify.AgentProfileResponse
	(*Route)(nil),                                   // 43: justify.Route
	(*CreateRouteRequest)(nil),                      // 44: justify.CreateRouteRequest
	(*CreateRouteResponse)(nil),                     // 45: justify.CreateRouteResponse
	(*UpdateRouteRequest)(nil),                      // 46: justify.UpdateRouteRequest
	(*UpdateRouteResponse)(nil),                     // 47: justify.UpdateRouteResponse
	(*GetRouteRequest)(nil),                         // 48: justify.GetRouteRequest
	(*GetRoutesResponse)(nil),                       // 49: justify.GetRoutesResponse
	(*GetRouteResponse)(nil),                        // 50: justify.GetRouteResponse
	(*AssignRouteAgentRequest)(nil),                 // 51: justify.AssignRouteAgentRequest
	(*AssignRouteVehicleRequest)(nil),               // 52: justify.AssignRouteVehicleRequest
	(*RouteNode)(nil),                               // 53: justify.RouteNode
	(*SaveRouteNodeRequest)(nil),                    // 54: justify.SaveRouteNodeRequest
	(*GetRouteNodeRequest)(nil),                     // 55: justify.GetRouteNodeRequest
	(*GetRouteNodeResponse)(nil),                    // 56: justify.GetRouteNodeResponse
	(*Task)(nil),                                    // 57: justify.Task
	(*TaskTemplate)(nil),                            // 58: justify.TaskTemplate
	(*TaskPoint)(nil),                               // 59: justify.TaskPoint
	(*RouteTaskMeta)(nil),                           // 60: justify.RouteTaskMeta
	(*RouteTask)(nil),                               // 61: justify.RouteTask
	(*GetRouteTaskRequest)(nil),                     // 62: justify.GetRouteTaskRequest
	(*GetRouteTasksResponse)(nil),                   // 63: justify.GetRouteTasksResponse
	(*GetRouteTaskResponse)(nil),                    // 64: justify.GetRouteTaskResponse
	(*MakeTaskFromRouteRequest)(nil),                // 65: justify.MakeTaskFromRouteRequest
	(*MakeTaskFromRouteResponse)(nil),               // 66: justify.MakeTaskFromRouteResponse
	(*UpdateRouteTaskRequest)(nil),                  // 67: justify.UpdateRouteTaskRequest
	(*CreateTaskRequest)(nil),                       // 68: justify.CreateTaskRequest
	(*CreateTaskResponse)(nil),                      // 69: justify.CreateTaskResponse
	(*GetTaskPointRequest)(nil),                     // 70: justify.GetTaskPointRequest
	(*GetTaskPointsResponse)(nil),                   // 71: justify.GetTaskPointsResponse
	(*GetTaskPointResponse)(nil),                    // 72: justify.GetTaskPointResponse
	(*AssignTaskAgentRequest)(nil),                  // 73: justify.AssignTaskAgentRequest
	(*TansferTaskPointRequest)(nil),                 // 74: justify.TansferTaskPointRequest
	(*Location)(nil),                                // 75: justify.Location
	(*CreateLocationRequest)(nil),                   // 76: justify.CreateLocationRequest
	(*CreateLocationResponse)(nil),                  // 77: justify.CreateLocationResponse
	(*UpdateLocationRequest)(nil),                   // 78: justify.UpdateLocationRequest
	(*UpdateLocationResponse)(nil),                  // 79: justify.UpdateLocationResponse
	(*GetLocationRequest)(nil),                      // 80: justify.GetLocationRequest
	(*GetLocationsResponse)(nil),                    // 81: justify.GetLocationsResponse
	(*GetLocationResponse)(nil),                     // 82: justify.GetLocationResponse
	(*VehicleType)(nil),                             // 83: justify.VehicleType
	(*Vehicle)(nil),                                 // 84: justify.Vehicle
	(*CreateVehicleRequest)(nil),                    // 85: justify.CreateVehicleRequest
	(*CreateVehicleResponse)(nil),                   // 86: justify.CreateVehicleResponse
	(*UpdateVehicleRequest)(nil),                    // 87: justify.UpdateVehicleRequest
	(*UpdateVehicleResponse)(nil),                   // 88: justify.UpdateVehicleResponse
	(*GetVehicleRequest)(nil),                       // 89: justify.GetVehicleRequest
	(*GetVehicleResponse)(nil),                      // 90: justify.GetVehicleResponse
	(*GetVehiclesResponse)(nil),                     // 91: justify.GetVehiclesResponse
	(*GetAppHomeResponse)(nil),                      // 92: justify.GetAppHomeResponse
	(*GetTrackingDataRequest)(nil),                  // 93: justify.GetTrackingDataRequest
	(*GetTrackingDataResponse)(nil),                 // 94: justify.GetTrackingDataResponse
	(*GetTrackingDataResponse_TrackingCompany)(nil), // 95: justify.GetTrackingDataResponse.TrackingCompany
}
var file_logistics_proto_depIdxs = []int32{
	1,  // 0: justify.GetSubscriptionsResponse.subscriptions:type_name -> justify.Subscription
	1,  // 1: justify.GetSubscriptionResponse.subscription:type_name -> justify.Subscription
	12, // 2: justify.SubscriptionInfo.status:type_name -> justify.SubsStatus
	13, // 3: justify.SubscriptionInfo.customer:type_name -> justify.Customer
	14, // 4: justify.SubscriptionInfo.product:type_name -> justify.ProductItem
	15, // 5: justify.GetInfoSubscriptionsResponse.subscriptions:type_name -> justify.SubscriptionInfo
	0,  // 6: justify.GetSubscriptionSummaryResponse.summary:type_name -> justify.KeyValue
	15, // 7: justify.GetInfoSubscriptionResponse.subscriptions:type_name -> justify.SubscriptionInfo
	19, // 8: justify.GetInvetoryDataResponse.products:type_name -> justify.InventoryProduct
	20, // 9: justify.GetInvetoryCustomersResponse.customers:type_name -> justify.InventoryCustomer
	23, // 10: justify.GetSlotsResponse.slots:type_name -> justify.Slot
	23, // 11: justify.GetSlotResponse.slot:type_name -> justify.Slot
	31, // 12: justify.GetAgentsResponse.agents:type_name -> justify.Agent
	31, // 13: justify.GetAgentResponse.agent:type_name -> justify.Agent
	61, // 14: justify.AgentHomeData.pending:type_name -> justify.RouteTask
	40, // 15: justify.AgentHomeData.assigned:type_name -> justify.AssignedTask
	43, // 16: justify.GetRoutesResponse.routes:type_name -> justify.Route
	43, // 17: justify.GetRouteResponse.route:type_name -> justify.Route
	53, // 18: justify.SaveRouteNodeRequest.nodes:type_name -> justify.RouteNode
	53, // 19: justify.GetRouteNodeResponse.connected:type_name -> justify.RouteNode
	53, // 20: justify.GetRouteNodeResponse.disconnected:type_name -> justify.RouteNode
	31, // 21: justify.RouteTaskMeta.agent:type_name -> justify.Agent
	84, // 22: justify.RouteTaskMeta.vehicle:type_name -> justify.Vehicle
	59, // 23: justify.RouteTask.points:type_name -> justify.TaskPoint
	60, // 24: justify.RouteTask.meta_data:type_name -> justify.RouteTaskMeta
	61, // 25: justify.GetRouteTasksResponse.tasks:type_name -> justify.RouteTask
	61, // 26: justify.GetRouteTaskResponse.task:type_name -> justify.RouteTask
	57, // 27: justify.CreateTaskRequest.task:type_name -> justify.Task
	58, // 28: justify.CreateTaskRequest.template:type_name -> justify.TaskTemplate
	59, // 29: justify.CreateTaskRequest.points:type_name -> justify.TaskPoint
	59, // 30: justify.GetTaskPointsResponse.points:type_name -> justify.TaskPoint
	59, // 31: justify.GetTaskPointResponse.point:type_name -> justify.TaskPoint
	75, // 32: justify.GetLocationsResponse.locations:type_name -> justify.Location
	75, // 33: justify.GetLocationResponse.location:type_name -> justify.Location
	84, // 34: justify.GetVehicleResponse.vehicle:type_name -> justify.Vehicle
	84, // 35: justify.GetVehiclesResponse.vehicles:type_name -> justify.Vehicle
	61, // 36: justify.GetAppHomeResponse.tasks:type_name -> justify.RouteTask
	95, // 37: justify.GetTrackingDataResponse.company:type_name -> justify.GetTrackingDataResponse.TrackingCompany
	61, // 38: justify.GetTrackingDataResponse.task:type_name -> justify.RouteTask
	2,  // 39: justify.LogisticsService.CreateSubscription:input_type -> justify.CreateSubscriptionRequest
	4,  // 40: justify.LogisticsService.UpdateSubscription:input_type -> justify.UpdateSubscriptionRequest
	4,  // 41: justify.LogisticsService.UpdateSubscriptionStatus:input_type -> justify.UpdateSubscriptionRequest
	6,  // 42: justify.LogisticsService.DetermineWalletBalance:input_type -> justify.DetermineWalletBalanceRequest
	9,  // 43: justify.LogisticsService.GetSubscriptionById:input_type -> justify.GetSubscriptionRequest
	8,  // 44: justify.LogisticsService.GetInfoSubscriptions:input_type -> justify.FilterSubscriptionRequest
	8,  // 45: justify.LogisticsService.GetSubscriptionSummary:input_type -> justify.FilterSubscriptionRequest
	8,  // 46: justify.LogisticsService.GetInventoryData:input_type -> justify.FilterSubscriptionRequest
	8,  // 47: justify.LogisticsService.GetInventoryCustomers:input_type -> justify.FilterSubscriptionRequest
	24, // 48: justify.LogisticsService.CreateSlot:input_type -> justify.CreateSlotRequest
	26, // 49: justify.LogisticsService.UpdateSlot:input_type -> justify.UpdateSlotRequest
	28, // 50: justify.LogisticsService.GetCitySlots:input_type -> justify.GetSlotRequest
	28, // 51: justify.LogisticsService.GetSlotById:input_type -> justify.GetSlotRequest
	28, // 52: justify.LogisticsService.DeleteSlotById:input_type -> justify.GetSlotRequest
	32, // 53: justify.LogisticsService.CreateAgent:input_type -> justify.CreateAgentRequest
	34, // 54: justify.LogisticsService.UpdateAgent:input_type -> justify.UpdateAgentRequest
	34, // 55: justify.LogisticsService.UpdateAgentStatus:input_type -> justify.UpdateAgentRequest
	34, // 56: justify.LogisticsService.UpdateAgentLocation:input_type -> justify.UpdateAgentRequest
	34, // 57: justify.LogisticsService.UpdateAgentAvatar:input_type -> justify.UpdateAgentRequest
	36, // 58: justify.LogisticsService.GetAgentsOfCity:input_type -> justify.GetAgentRequest
	37, // 59: justify.LogisticsService.FilterAgent:input_type -> justify.FilterAgentRequest
	36, // 60: justify.LogisticsService.GetAgentById:input_type -> justify.GetAgentRequest
	36, // 61: justify.LogisticsService.VerifyAgent:input_type -> justify.GetAgentRequest
	36, // 62: justify.LogisticsService.InitAgentHome:input_type -> justify.GetAgentRequest
	36, // 63: justify.LogisticsService.AgentProfileData:input_type -> justify.GetAgentRequest
	44, // 64: justify.LogisticsService.CreateRoute:input_type -> justify.CreateRouteRequest
	46, // 65: justify.LogisticsService.UpdateRoute:input_type -> justify.UpdateRouteRequest
	48, // 66: justify.LogisticsService.GetRoutesOfHub:input_type -> justify.GetRouteRequest
	48, // 67: justify.LogisticsService.GetRoutesOfCity:input_type -> justify.GetRouteRequest
	48, // 68: justify.LogisticsService.GetRouteById:input_type -> justify.GetRouteRequest
	51, // 69: justify.LogisticsService.AssignRouteAgent:input_type -> justify.AssignRouteAgentRequest
	52, // 70: justify.LogisticsService.AssignRouteVehicle:input_type -> justify.AssignRouteVehicleRequest
	54, // 71: justify.LogisticsService.SaveRouteNode:input_type -> justify.SaveRouteNodeRequest
	55, // 72: justify.LogisticsService.GetRouteNodeOfRoute:input_type -> justify.GetRouteNodeRequest
	65, // 73: justify.LogisticsService.MakeTaskFromRoute:input_type -> justify.MakeTaskFromRouteRequest
	67, // 74: justify.LogisticsService.UpdateRouteTask:input_type -> justify.UpdateRouteTaskRequest
	62, // 75: justify.LogisticsService.GetRouteTask:input_type -> justify.GetRouteTaskRequest
	62, // 76: justify.LogisticsService.GetRouteTaskById:input_type -> justify.GetRouteTaskRequest
	70, // 77: justify.LogisticsService.GetTaskPoints:input_type -> justify.GetTaskPointRequest
	70, // 78: justify.LogisticsService.GetTaskPointById:input_type -> justify.GetTaskPointRequest
	68, // 79: justify.LogisticsService.CreateTaskFromPoints:input_type -> justify.CreateTaskRequest
	73, // 80: justify.LogisticsService.AssignTaskAgent:input_type -> justify.AssignTaskAgentRequest
	74, // 81: justify.LogisticsService.TransferTaskPoint:input_type -> justify.TansferTaskPointRequest
	62, // 82: justify.LogisticsService.AppHomeData:input_type -> justify.GetRouteTaskRequest
	76, // 83: justify.LogisticsService.CreateLocation:input_type -> justify.CreateLocationRequest
	78, // 84: justify.LogisticsService.UpdateLocation:input_type -> justify.UpdateLocationRequest
	80, // 85: justify.LogisticsService.CityLocations:input_type -> justify.GetLocationRequest
	80, // 86: justify.LogisticsService.GetLocationById:input_type -> justify.GetLocationRequest
	85, // 87: justify.LogisticsService.CreateVehicle:input_type -> justify.CreateVehicleRequest
	87, // 88: justify.LogisticsService.UpdateVehicle:input_type -> justify.UpdateVehicleRequest
	87, // 89: justify.LogisticsService.UpdateVehicleImage:input_type -> justify.UpdateVehicleRequest
	87, // 90: justify.LogisticsService.UpdateVehicleLocation:input_type -> justify.UpdateVehicleRequest
	89, // 91: justify.LogisticsService.GetVehicle:input_type -> justify.GetVehicleRequest
	89, // 92: justify.LogisticsService.GetVehiclesOfCity:input_type -> justify.GetVehicleRequest
	93, // 93: justify.LogisticsService.GetTrackingData:input_type -> justify.GetTrackingDataRequest
	3,  // 94: justify.LogisticsService.CreateSubscription:output_type -> justify.CreateSubscriptionResponse
	5,  // 95: justify.LogisticsService.UpdateSubscription:output_type -> justify.UpdateSubscriptionResponse
	5,  // 96: justify.LogisticsService.UpdateSubscriptionStatus:output_type -> justify.UpdateSubscriptionResponse
	7,  // 97: justify.LogisticsService.DetermineWalletBalance:output_type -> justify.DetermineWalletBalanceResponse
	11, // 98: justify.LogisticsService.GetSubscriptionById:output_type -> justify.GetSubscriptionResponse
	16, // 99: justify.LogisticsService.GetInfoSubscriptions:output_type -> justify.GetInfoSubscriptionsResponse
	17, // 100: justify.LogisticsService.GetSubscriptionSummary:output_type -> justify.GetSubscriptionSummaryResponse
	21, // 101: justify.LogisticsService.GetInventoryData:output_type -> justify.GetInvetoryDataResponse
	22, // 102: justify.LogisticsService.GetInventoryCustomers:output_type -> justify.GetInvetoryCustomersResponse
	25, // 103: justify.LogisticsService.CreateSlot:output_type -> justify.CreateSlotResponse
	27, // 104: justify.LogisticsService.UpdateSlot:output_type -> justify.UpdateSlotResponse
	29, // 105: justify.LogisticsService.GetCitySlots:output_type -> justify.GetSlotsResponse
	30, // 106: justify.LogisticsService.GetSlotById:output_type -> justify.GetSlotResponse
	27, // 107: justify.LogisticsService.DeleteSlotById:output_type -> justify.UpdateSlotResponse
	33, // 108: justify.LogisticsService.CreateAgent:output_type -> justify.CreateAgentResponse
	35, // 109: justify.LogisticsService.UpdateAgent:output_type -> justify.UpdateAgentResponse
	35, // 110: justify.LogisticsService.UpdateAgentStatus:output_type -> justify.UpdateAgentResponse
	35, // 111: justify.LogisticsService.UpdateAgentLocation:output_type -> justify.UpdateAgentResponse
	35, // 112: justify.LogisticsService.UpdateAgentAvatar:output_type -> justify.UpdateAgentResponse
	38, // 113: justify.LogisticsService.GetAgentsOfCity:output_type -> justify.GetAgentsResponse
	38, // 114: justify.LogisticsService.FilterAgent:output_type -> justify.GetAgentsResponse
	39, // 115: justify.LogisticsService.GetAgentById:output_type -> justify.GetAgentResponse
	39, // 116: justify.LogisticsService.VerifyAgent:output_type -> justify.GetAgentResponse
	41, // 117: justify.LogisticsService.InitAgentHome:output_type -> justify.AgentHomeData
	42, // 118: justify.LogisticsService.AgentProfileData:output_type -> justify.AgentProfileResponse
	45, // 119: justify.LogisticsService.CreateRoute:output_type -> justify.CreateRouteResponse
	47, // 120: justify.LogisticsService.UpdateRoute:output_type -> justify.UpdateRouteResponse
	49, // 121: justify.LogisticsService.GetRoutesOfHub:output_type -> justify.GetRoutesResponse
	49, // 122: justify.LogisticsService.GetRoutesOfCity:output_type -> justify.GetRoutesResponse
	50, // 123: justify.LogisticsService.GetRouteById:output_type -> justify.GetRouteResponse
	47, // 124: justify.LogisticsService.AssignRouteAgent:output_type -> justify.UpdateRouteResponse
	47, // 125: justify.LogisticsService.AssignRouteVehicle:output_type -> justify.UpdateRouteResponse
	47, // 126: justify.LogisticsService.SaveRouteNode:output_type -> justify.UpdateRouteResponse
	56, // 127: justify.LogisticsService.GetRouteNodeOfRoute:output_type -> justify.GetRouteNodeResponse
	66, // 128: justify.LogisticsService.MakeTaskFromRoute:output_type -> justify.MakeTaskFromRouteResponse
	47, // 129: justify.LogisticsService.UpdateRouteTask:output_type -> justify.UpdateRouteResponse
	63, // 130: justify.LogisticsService.GetRouteTask:output_type -> justify.GetRouteTasksResponse
	64, // 131: justify.LogisticsService.GetRouteTaskById:output_type -> justify.GetRouteTaskResponse
	71, // 132: justify.LogisticsService.GetTaskPoints:output_type -> justify.GetTaskPointsResponse
	72, // 133: justify.LogisticsService.GetTaskPointById:output_type -> justify.GetTaskPointResponse
	69, // 134: justify.LogisticsService.CreateTaskFromPoints:output_type -> justify.CreateTaskResponse
	47, // 135: justify.LogisticsService.AssignTaskAgent:output_type -> justify.UpdateRouteResponse
	47, // 136: justify.LogisticsService.TransferTaskPoint:output_type -> justify.UpdateRouteResponse
	92, // 137: justify.LogisticsService.AppHomeData:output_type -> justify.GetAppHomeResponse
	77, // 138: justify.LogisticsService.CreateLocation:output_type -> justify.CreateLocationResponse
	79, // 139: justify.LogisticsService.UpdateLocation:output_type -> justify.UpdateLocationResponse
	81, // 140: justify.LogisticsService.CityLocations:output_type -> justify.GetLocationsResponse
	82, // 141: justify.LogisticsService.GetLocationById:output_type -> justify.GetLocationResponse
	86, // 142: justify.LogisticsService.CreateVehicle:output_type -> justify.CreateVehicleResponse
	88, // 143: justify.LogisticsService.UpdateVehicle:output_type -> justify.UpdateVehicleResponse
	88, // 144: justify.LogisticsService.UpdateVehicleImage:output_type -> justify.UpdateVehicleResponse
	88, // 145: justify.LogisticsService.UpdateVehicleLocation:output_type -> justify.UpdateVehicleResponse
	90, // 146: justify.LogisticsService.GetVehicle:output_type -> justify.GetVehicleResponse
	91, // 147: justify.LogisticsService.GetVehiclesOfCity:output_type -> justify.GetVehiclesResponse
	94, // 148: justify.LogisticsService.GetTrackingData:output_type -> justify.GetTrackingDataResponse
	94, // [94:149] is the sub-list for method output_type
	39, // [39:94] is the sub-list for method input_type
	39, // [39:39] is the sub-list for extension type_name
	39, // [39:39] is the sub-list for extension extendee
	0,  // [0:39] is the sub-list for field type_name
}

func init() { file_logistics_proto_init() }
func file_logistics_proto_init() {
	if File_logistics_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_logistics_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Subscription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSubscriptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSubscriptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSubscriptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSubscriptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetermineWalletBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetermineWalletBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterSubscriptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubscriptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubscriptionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubscriptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubsStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Customer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscriptionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInfoSubscriptionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubscriptionSummaryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInfoSubscriptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InventoryProduct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InventoryCustomer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInvetoryDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInvetoryCustomersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Slot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSlotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSlotResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSlotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSlotResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSlotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSlotsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSlotResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Agent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAgentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAgentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAgentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAgentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAgentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterAgentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAgentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAgentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignedTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentHomeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentProfileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Route); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRouteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRouteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRouteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRouteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRouteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoutesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRouteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignRouteAgentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignRouteVehicleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RouteNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveRouteNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRouteNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRouteNodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RouteTaskMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RouteTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRouteTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRouteTasksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRouteTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MakeTaskFromRouteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MakeTaskFromRouteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRouteTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskPointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskPointsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskPointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignTaskAgentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TansferTaskPointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLocationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLocationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLocationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLocationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLocationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLocationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLocationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vehicle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVehicleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVehicleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateVehicleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateVehicleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVehicleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVehicleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVehiclesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppHomeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTrackingDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTrackingDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistics_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTrackingDataResponse_TrackingCompany); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_logistics_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   96,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_logistics_proto_goTypes,
		DependencyIndexes: file_logistics_proto_depIdxs,
		MessageInfos:      file_logistics_proto_msgTypes,
	}.Build()
	File_logistics_proto = out.File
	file_logistics_proto_rawDesc = nil
	file_logistics_proto_goTypes = nil
	file_logistics_proto_depIdxs = nil
}
